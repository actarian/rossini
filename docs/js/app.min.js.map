{"version":3,"sources":["docs/js/app.js"],"names":["angular","module","config","$httpProvider","$locationProvider","html5Mode","hashPrefix","run","$rootScope","getPerlinNoise","width","height","size","data","Uint8Array","perlin","ImprovedNoise","quality","z","Math","random","j","i","x","y","abs","noise","fade","t","lerp","a","b","grad","hash","h","u","v","p","floorX","floor","floorY","floorZ","X","Y","Z","xMinus1","yMinus1","zMinus1","w","A","AA","AB","B","BA","BB","getRandomRange","min","max","allowNegatives","n","app","Number","prototype","mod","this","service","$q","$http","SceneOptions","StepperService","init","source","ctx","actx","window","AudioContext","webkitAudioContext","analyser","createAnalyser","audio","Audio","addEventListener","bufferLength","console","log","createMediaElementSource","connect","destination","fftSize","options","bands","frequencyBinCount","setStep","setAudioUrl","$audioUrl","audioUrl","src","volume","audioVolume","play","stepper","getCurrentStep","url","update","getByteFrequencyData","$on","$scope","directive","AnalyserService","restrict","scope","link","element","attributes","getObjectRibbon","add","scene","object","remove","updateRibbon","c","steps","length","cpow","values","pow","tpow","position","cameraSpline","getPointAt","cameraHeight","target","targetHeight","camera","copy","lookAt","getMaterial","THREE","Vector2","innerWidth","innerHeight","MeshLineMaterial","color","lines","lineWidth","depthTest","updateRibbonMaterial","objects","ribbon","material","prev","Vector3","points","Array","fill","map","spline","CatmullRomCurve3","type","closed","geometry","Geometry","vertices","getPoints","line","MeshLine","setGeometry","Mesh","updateMaterial","getObjectCircles","index","state","adding","Date","now","removing","enabled","tween","kill","TweenLite","to","duration","delay","ease","Elastic","easeOut","onComplete","Power2","getLine1","addPoints","points1","push","useMeshLines","meshLine","meshLineGeometries1","meshLines1","materialLine1","LineLoop","material1","group1","getLine2","points2","meshLineGeometries2","meshLines2","materialLine2","material2","group2","l","g","pn","ratio","degrees","radians","PI","radius","increment","sincos","base","cos","sin","updateLine","audioStrength","noiseStrength","circularStrength","forEach","aia","aib","audioPow","nd","nia","iterator","nib","noisePow","noiseMap","linePow","ln","verticesNeedUpdate","updateCircle","lines1","lines2","rotation","step","getStepAtIndex","dummy","circle","scale","updateCircleMaterial","opacity","overLines","texture","TextureLoader","load","wrapS","RepeatWrapping","wrapT","repeat","set","resolution","MeshBasicMaterial","transparent","LineBasicMaterial","Object3D","PlaneGeometry","plane","render","controls","circles","renderer","loop","stats","begin","end","requestAnimationFrame","w2","h2","current","previous","setTimeout","Scene","PerspectiveCamera","WebGLRenderer","alpha","antialias","logarithmicDepthBuffer","setClearColor","setSize","Stats","appendChild","domElement","dom","onWindowResize","aspect","updateProjectionMatrix","constant","colors","background","controller","DatGui","then","getItems","id","name","deferred","defer","get","response","items","item","resolve","error","reject","promise","clearTweens","tweens","pop","tweenTo","callback","Color","easeInOut","r","onUpdate","getHexString","document","body","style","backgroundColor","setTweens","$broadcast","next","factory","onOptionsChanged","params","gui","dat","GUI","randomize","__controllers","__min","value","__max","property","updateDisplay","__color","setValue","hex","saveJson","downloadFile","listen","onChange","circlePosition","addFolder","addColor","createElement","fileName","json","pretty","JSON","stringify","blob","Blob","URL","createObjectURL","href","download","click","revokeObjectURL","model","Init","scrollbar","Scrollbar","native","$watch","targets","content","offsetHeight","speed","damping","overscrollDamping","thumbMinSize","continuousScrolling","alwaysShowTracks"],"mappings":"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","file":"app.min.js","sourcesContent":["/* global angular */\r\n\r\n(function() {\r\n    \"use strict\";\r\n\r\n    var app = angular.module('app', ['ngRoute', 'jsonFormatter']);\r\n\r\n}());\n/* global angular */\r\n\r\n(function() {\r\n    \"use strict\";\r\n\r\n    var app = angular.module('app');\r\n\r\n    app.config(['$httpProvider', function($httpProvider) {\r\n        // $httpProvider.defaults.withCredentials = true;\r\n    }]);\r\n\r\n}());\n/* global angular */\r\n\r\n(function() {\r\n    \"use strict\";\r\n\r\n    var app = angular.module('app');\r\n\r\n    app.config(['$locationProvider', function($locationProvider) {\r\n\r\n        // HTML5 MODE url writing method (false: #/anchor/use, true: /html5/url/use)\r\n        $locationProvider.html5Mode(true);\r\n        $locationProvider.hashPrefix('');\r\n\r\n    }]);\r\n\r\n}());\n/* global angular */\r\n\r\n(function() {\r\n    \"use strict\";\r\n\r\n    var app = angular.module('app');\r\n\r\n    app.run(['$rootScope', function($rootScope) {\r\n\r\n    }]);\r\n\r\n}());\n/* global angular */\n\n(function() {\n    \"use strict\";\n\n    var app = angular.module('app');\n\n    Number.prototype.mod = function(n) {\n        return ((this % n) + n) % n;\n    };\n\n    function getPerlinNoise(width, height) {\n        var size = width * height,\n            data = new Uint8Array(size),\n            perlin = new ImprovedNoise(),\n            quality = 1,\n            z = Math.random() * 100;\n        for (var j = 0; j < 4; j++) {\n            for (var i = 0; i < size; i++) {\n                var x = i % width,\n                    y = ~~(i / width);\n                data[i] += Math.abs(perlin.noise(x / quality, y / quality, z) * quality * 1.75);\n            }\n            quality *= 5;\n        }\n        return data;\n    }\n\n    function ImprovedNoise() {\n        var p = [151, 160, 137, 91, 90, 15, 131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10,\n            23, 190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33, 88, 237, 149, 56, 87,\n            174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166, 77, 146, 158, 231, 83, 111, 229, 122, 60, 211,\n            133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244, 102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208,\n            89, 18, 169, 200, 196, 135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123, 5,\n            202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42, 223, 183, 170, 213, 119,\n            248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9, 129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232,\n            178, 185, 112, 104, 218, 246, 97, 228, 251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249,\n            14, 239, 107, 49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254, 138, 236, 205,\n            93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180\n        ];\n        for (var i = 0; i < 256; i++) {\n            p[256 + i] = p[i];\n        }\n\n        function fade(t) {\n            return t * t * t * (t * (t * 6 - 15) + 10);\n        }\n\n        function lerp(t, a, b) {\n            return a + t * (b - a);\n        }\n\n        function grad(hash, x, y, z) {\n            var h = hash & 15;\n            var u = h < 8 ? x : y,\n                v = h < 4 ? y : h == 12 || h == 14 ? x : z;\n            return ((h & 1) === 0 ? u : -u) + ((h & 2) === 0 ? v : -v);\n        }\n\n        return {\n            noise: function(x, y, z) {\n                var floorX = Math.floor(x),\n                    floorY = Math.floor(y),\n                    floorZ = Math.floor(z);\n                var X = floorX & 255,\n                    Y = floorY & 255,\n                    Z = floorZ & 255;\n                x -= floorX;\n                y -= floorY;\n                z -= floorZ;\n                var xMinus1 = x - 1,\n                    yMinus1 = y - 1,\n                    zMinus1 = z - 1;\n                var u = fade(x),\n                    v = fade(y),\n                    w = fade(z);\n                var A = p[X] + Y,\n                    AA = p[A] + Z,\n                    AB = p[A + 1] + Z,\n                    B = p[X + 1] + Y,\n                    BA = p[B] + Z,\n                    BB = p[B + 1] + Z;\n                return lerp(w, lerp(v, lerp(u, grad(p[AA], x, y, z),\n                            grad(p[BA], xMinus1, y, z)),\n                        lerp(u, grad(p[AB], x, yMinus1, z),\n                            grad(p[BB], xMinus1, yMinus1, z))),\n                    lerp(v, lerp(u, grad(p[AA + 1], x, y, zMinus1),\n                            grad(p[BA + 1], xMinus1, y, z - 1)),\n                        lerp(u, grad(p[AB + 1], x, yMinus1, zMinus1),\n                            grad(p[BB + 1], xMinus1, yMinus1, zMinus1))));\n\n            }\n        };\n    }\n\n    function getRandomRange(min, max, allowNegatives) {\n        var n = -1 + Math.random() * 2;\n        var a = Math.abs(n);\n        var s = allowNegatives ? Math.floor(n / a) : 1;\n        return s * (min + (max - min) * a);\n    }\n\n    app.service('AnalyserService', ['$rootScope', '$q', '$http', 'SceneOptions', 'StepperService', function($rootScope, $q, $http, SceneOptions, StepperService) {\n\n        var service = this;\n        var options = SceneOptions;\n        var stepper = StepperService;\n\n        var analyser, audio, audioUrl;\n\n        function init() {\n            var source, ctx, actx = (window.AudioContext || window.webkitAudioContext);\n            source = null;\n            ctx = new actx();\n            analyser = ctx.createAnalyser();\n            audio = new Audio();\n            // audio.controls = true;\n            audio.addEventListener('canplay', function() {\n                var bufferLength;\n                console.log('audio canplay');\n                source = ctx.createMediaElementSource(audio);\n                source.connect(analyser);\n                source.connect(ctx.destination);\n                analyser.fftSize = options.bands * 2;\n                bufferLength = analyser.frequencyBinCount;\n                service.data = new Uint8Array(bufferLength);\n                // console.log('bufferLength', bufferLength);\n                return service.data;\n            });\n            setStep();\n        }\n\n        function setAudioUrl($audioUrl) {\n            if (audioUrl !== $audioUrl) {\n                audioUrl = $audioUrl;\n                audio.src = $audioUrl;\n                audio.volume = options.audioVolume;\n                audio.play();\n            }\n        }\n\n        function setStep() {\n            var step = stepper.getCurrentStep();\n            setAudioUrl(step.audio.url);\n        }\n\n        function update() {\n            if (service.data) {\n                analyser.getByteFrequencyData(service.data);\n            }\n        }\n\n        $rootScope.$on('onStepChanged', function($scope) {\n            setStep();\n        });\n\n        $rootScope.$on('onOptionsChanged', function($scope) {\n            if (audio) {\n                audio.volume = options.audioVolume;\n            }\n        });\n\n        this.audio = audio;\n        this.data = null;\n        this.init = init;\n        this.update = update;\n\n    }]);\n\n    app.directive('scene', ['SceneOptions', 'StepperService', 'AnalyserService', function(SceneOptions, StepperService, AnalyserService) {\n        return {\n            restrict: 'A',\n            scope: {\n                data: '=scene',\n            },\n            link: function(scope, element, attributes) {\n                var data = scope.data;\n                if (!data) {\n                    return;\n                }\n\n                var objects = data.objects;\n\n                var options = SceneOptions;\n                var stepper = StepperService;\n                var analyser = AnalyserService;\n\n                options.noiseMap = getPerlinNoise(options.points, options.lines);\n\n                var stats, scene, camera, shadow, back, light, renderer, width, height, w2, h2;\n                var controls = null;\n\n                scope.$on('onStepChanged', function($scope, step) {\n                    console.log('onStepChanged', step.current);\n                    var circle = null;\n                    var current = step.current,\n                        previous = step.previous;\n                    if (current > 0) {\n                        circle = objects.circles[current] || getObjectCircles(current);\n                        circle.add();\n                    }\n                    objects.circles[current] = circle;\n                    setTimeout(function() {\n                        if (stepper.current !== previous && previous > 0) {\n                            var circle = objects.circles[previous];\n                            if (circle) {\n                                circle.remove();\n                            }\n                        }\n                    }, stepper.duration * 1000);\n                    console.log('objects', objects);\n                });\n\n                scope.$on('onStepComplete', function($scope, step) {\n                    console.log('onStepComplete', step.current);\n                    /*\n                    var circle = null;\n                    var current = step.current,\n                        previous = step.previous;\n                    if (current > 0) {\n                        circle = objects.circles[current] || getObjectCircles(current);\n                        circle.add();\n                    }\n                    objects.circles[current] = circle;\n                    setTimeout(function() {\n                        if (stepper.current !== previous && previous > 0) {\n                            var circle = objects.circles[previous];\n                            if (circle) {\n                                circle.remove();\n                            }\n                        }\n                    }, stepper.duration * 1000);\n                    // console.log('objects', objects);\n                    */\n                });\n\n                scope.$on('onOptionsChanged', function($scope) {\n                    // renderer.setClearColor(stepper.values.background, 1);\n                    if (objects.ribbon) {\n                        objects.ribbon.updateMaterial();\n                    }\n                    angular.forEach(objects.circles, function(circle) {\n                        if (circle) {\n                            circle.updateMaterial();\n                        }\n                    });\n                });\n\n                createScene();\n                // createLights();\n                createObjects();\n                addListeners();\n                loop();\n                analyser.init();\n\n                function createScene() {\n                    width = window.innerWidth;\n                    height = window.innerHeight;\n                    w2 = width / 2;\n                    h2 = height / 2;\n\n                    var ratio = width / height;\n                    var fov = 30;\n                    var near = 0.001;\n                    var far = 20000;\n\n                    scene = new THREE.Scene();\n                    // scene.fog = new THREE.Fog(0x000000, 300, 1000);\n\n                    camera = new THREE.PerspectiveCamera(fov, ratio, near, far);\n                    /*\n                    camera.position.z = 100;\n                    camera.position.y = -500;\n                    camera.lookAt(new THREE.Vector3(0, 0, 0));\n                    */\n\n                    renderer = new THREE.WebGLRenderer({\n                        alpha: true,\n                        antialias: true,\n                        logarithmicDepthBuffer: true\n                    });\n\n                    renderer.setClearColor(0x000000, 0); // the default\n                    // renderer.setClearColor(stepper.values.background, 1);\n                    renderer.setSize(width, height);\n                    // renderer.shadowMap.enabled = true;\n\n                    stats = new Stats();\n                    element[0].appendChild(renderer.domElement);\n                    element[0].appendChild(stats.dom);\n                }\n\n                function createLights() {\n                    light = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.5);\n                    shadow = new THREE.DirectionalLight(0xffffff, 0.8);\n                    shadow.position.set(200, 200, 200);\n                    shadow.castShadow = true;\n                    // shadow.shadowDarkness = .2;\n                    back = new THREE.DirectionalLight(0xffffff, 0.4);\n                    back.position.set(-100, 200, 50);\n                    // back.shadowDarkness = .2;\n                    back.castShadow = true;\n                    scene.add(light);\n                    scene.add(shadow);\n                    scene.add(back);\n                }\n\n                function createObjects() {\n                    objects.ribbon = getObjectRibbon();\n                    objects.circles = new Array(stepper.steps).fill(null);\n                }\n\n                function getObjectRibbon() {\n                    var material = getMaterial();\n\n                    var prev = new THREE.Vector3();\n                    var points = new Array(options.ribbon.points).fill(null).map(function() {\n                        var p = new THREE.Vector3().copy(prev);\n                        prev.x += getRandomRange(500, 1000, true);\n                        prev.y += getRandomRange(5, 20, true);\n                        prev.z += getRandomRange(1000, 2000, false);\n                        return p;\n                    });\n\n                    var spline = new THREE.CatmullRomCurve3(points);\n                    spline.type = 'catmullrom';\n                    spline.closed = false;\n\n                    var cameraSpline = new THREE.CatmullRomCurve3(spline.points.map(function(p) {\n                        return new THREE.Vector3(p.x, p.y + 20, p.z);\n                    }));\n                    cameraSpline.type = 'catmullrom';\n                    cameraSpline.closed = false;\n\n                    var geometry = new THREE.Geometry();\n                    geometry.vertices = spline.getPoints(options.ribbon.vertices);\n\n                    var line = new MeshLine();\n                    line.setGeometry(geometry);\n\n                    // line.setGeometry( geometry, function( p ) { return 2; } ); // makes width 2 * lineWidth\n                    // line.setGeometry( geometry, function( p ) { return 1 - p; } ); // makes width taper\n                    // line.setGeometry( geometry, function( p ) { return 2 + Math.sin( 50 * p ); } ); // makes width sinusoidal\n\n                    var object = new THREE.Mesh(line.geometry, material);\n                    add();\n\n                    function add() {\n                        console.log('objects.ribbon.add');\n                        scene.add(object);\n                    }\n\n                    function remove() {\n                        console.log('objects.ribbon.remove');\n                        scene.remove(object);\n                    }\n\n                    camera.target = camera.target || new THREE.Vector3(0, 0, 0);\n\n                    function updateRibbon() {\n                        var c = (1 / stepper.steps.length) * 0.1;\n                        var cpow = stepper.values.pow;\n                        var tpow = (cpow + c).mod(1);\n                        var step = stepper.getCurrentStep();\n                        var position = cameraSpline.getPointAt(cpow);\n                        position.y += stepper.values.cameraHeight;\n                        var target = cameraSpline.getPointAt(tpow);\n                        target.y += stepper.values.targetHeight;\n                        // var tangent = cameraSpline.getTangent(tpow).normalize().multiplyScalar(100);\n                        // target.add(tangent);\n                        camera.position.copy(position);\n                        camera.target.copy(target);\n                        camera.lookAt(camera.target);\n                    }\n\n                    function getMaterial() {\n                        var resolution = new THREE.Vector2(window.innerWidth, window.innerHeight);\n                        return new MeshLineMaterial({\n                            color: stepper.values.lines,\n                            lineWidth: 5,\n                            depthTest: true,\n                            /*\n                            opacity: 1,\n                            resolution: resolution,\n                            sizeAttenuation: 1,\n                            near: 1,\n                            far: 1000,\n                            blending: THREE.AdditiveBlending,\n                            transparent: false,\n                            side: THREE.DoubleSide,\n                            */\n                        });\n                    }\n\n                    function updateRibbonMaterial() {\n                        // !!! non va bene\n                        objects.ribbon.material = getMaterial();\n                        objects.ribbon.object.material = objects.ribbon.material;\n                    }\n\n                    return {\n                        object: object,\n                        spline: spline,\n                        cameraSpline: cameraSpline,\n                        geometry: geometry,\n                        material: material,\n                        add: add,\n                        remove: remove,\n                        update: updateRibbon,\n                        updateMaterial: updateRibbonMaterial,\n                    };\n                }\n\n                function getObjectCircles(index) {\n                    var geometry, object, circles = [];\n\n                    var step = stepper.steps[index];\n                    var texture = new THREE.TextureLoader().load(step.circle.texture);\n                    texture.wrapS = THREE.RepeatWrapping;\n                    texture.wrapT = THREE.RepeatWrapping;\n                    texture.repeat.set(1, 1);\n\n                    var resolution = new THREE.Vector2(window.innerWidth, window.innerHeight);\n\n                    var material = new THREE.MeshBasicMaterial({\n                        color: 0xffffff,\n                        map: texture,\n                        transparent: true,\n                    });\n\n                    var material1 = new THREE.LineBasicMaterial({\n                        color: stepper.values.lines,\n                        transparent: true,\n                    });\n\n                    var material2 = new THREE.LineBasicMaterial({\n                        color: stepper.values.overLines,\n                        transparent: true,\n                    });\n\n                    var materialLine1 = new MeshLineMaterial({\n                        color: stepper.values.lines,\n                        lineWidth: 1.0,\n                        depthTest: false,\n                        opacity: 1,\n                        transparent: true,\n                        resolution: resolution,\n                        /*\n                        sizeAttenuation: 1,\n                        near: 1,\n                        far: 1000,\n                        blending: THREE.AdditiveBlending,\n                        side: THREE.DoubleSide,\n                        */\n                    });\n\n                    var materialLine2 = new MeshLineMaterial({\n                        color: stepper.values.overLines,\n                        lineWidth: 1.0,\n                        depthTest: false,\n                        opacity: 1,\n                        transparent: true,\n                        resolution: resolution,\n                        /*\n                        sizeAttenuation: 1,\n                        near: 1,\n                        far: 1000,\n                        blending: THREE.AdditiveBlending,\n                        side: THREE.DoubleSide,\n                        */\n                    });\n\n                    object = new THREE.Object3D();\n\n                    var points1 = [],\n                        points2 = [],\n                        meshLines1 = [],\n                        meshLines2 = [],\n                        meshLineGeometries1 = [],\n                        meshLineGeometries2 = [],\n                        useMeshLines = true;\n\n                    var pn = options.points,\n                        ln = options.lines;\n\n                    var dummy = new THREE.Object3D();\n                    object.add(dummy);\n\n                    // circle\n                    geometry = new THREE.PlaneGeometry(options.radius * 2 - 20, options.radius * 2 - 20, 8, 8);\n                    var plane = new THREE.Mesh(geometry, material);\n                    plane.position.z = -30;\n                    dummy.add(plane);\n                    // circle\n\n                    var group1 = new THREE.Object3D();\n                    dummy.add(group1);\n\n                    var group2 = new THREE.Object3D();\n                    dummy.add(group2);\n\n                    var lines1 = new Array(ln).fill(null).map(getLine1);\n                    var lines2 = new Array(ln).fill(null).map(getLine2);\n\n                    var state = {\n                        pow: 0,\n                        duration: 2.350,\n                        enabled: false,\n                        adding: false,\n                        removing: false,\n                    };\n\n                    var to = null;\n\n                    function add() {\n                        console.log('objects.circles.add');\n                        scene.add(object);\n                        state.adding = Date.now();\n                        state.removing = false;\n                        state.enabled = true;\n                        if (state.tween) {\n                            state.tween.kill();\n                        }\n                        state.tween = TweenLite.to(state, state.duration, {\n                            pow: 1,\n                            delay: 0,\n                            ease: Elastic.easeOut.config(1, 0.3),\n                            onComplete: function() {\n                                state.adding = false;\n                            },\n                        });\n                    }\n\n                    function remove() {\n                        console.log('objects.circles.remove');\n                        state.adding = false;\n                        state.removing = Date.now();\n                        if (state.tween) {\n                            state.tween.kill();\n                        }\n                        state.tween = TweenLite.to(state, state.duration, {\n                            pow: 0,\n                            delay: 0,\n                            ease: Power2.easeOut,\n                            onComplete: function() {\n                                state.removing = false;\n                                state.enabled = false;\n                                scene.remove(object);\n                            },\n                        });\n                    }\n\n                    var iterator = 0;\n\n                    function getLine1(v, i) {\n                        var geometry = new THREE.Geometry();\n                        var points = addPoints(geometry, i, 1);\n                        points1.push(points);\n                        var line = null;\n                        if (useMeshLines) {\n                            var meshLine = new MeshLine();\n                            meshLine.setGeometry(geometry);\n                            meshLineGeometries1.push(geometry);\n                            meshLines1.push(meshLine);\n                            // meshLine.setGeometry( geometry, function( p ) { return 2; } ); // makes width 2 * lineWidth\n                            // meshLine.setGeometry( geometry, function( p ) { return 1 - p; } ); // makes width taper\n                            // meshLine.setGeometry( geometry, function( p ) { return 2 + Math.sin( 50 * p ); } ); // makes width sinusoidal\n                            line = new THREE.Mesh(meshLine.geometry, materialLine1);\n                        } else {\n                            line = new THREE.LineLoop(geometry, material1);\n                            // var spline = new THREE.CatmullRomCurve3(points);\n                            // circle.spline = spline;\n                        }\n                        group1.add(line);\n                        return line;\n                    }\n\n                    function getLine2(v, i) {\n                        var geometry = new THREE.Geometry();\n                        var points = addPoints(geometry, i, 2);\n                        points2.push(points);\n                        var line = null;\n                        if (useMeshLines) {\n                            var meshLine = new MeshLine();\n                            meshLine.setGeometry(geometry);\n                            meshLineGeometries2.push(geometry);\n                            meshLines2.push(meshLine);\n                            // meshLine.setGeometry( geometry, function( p ) { return 2; } ); // makes width 2 * lineWidth\n                            // meshLine.setGeometry( geometry, function( p ) { return 1 - p; } ); // makes width taper\n                            // meshLine.setGeometry( geometry, function( p ) { return 2 + Math.sin( 50 * p ); } ); // makes width sinusoidal\n                            line = new THREE.Mesh(meshLine.geometry, materialLine2);\n                        } else {\n                            line = new THREE.LineLoop(geometry, material2);\n                            // var spline = new THREE.CatmullRomCurve3(points);\n                            // circle.spline = spline;\n                        }\n                        group2.add(line);\n                        return line;\n                    }\n\n                    function addPoints(geometry, l, g) {\n                        var points = new Array(pn).fill(null).map(function(v, i) {\n                            var ratio = i / pn;\n                            var degrees = 360 * ratio; // point degrees;\n                            degrees += 60 * index; // circle offset;\n                            degrees += 30 * g; // group offset;\n                            degrees += (360 / pn * 0.1) * l; // line offset;\n                            var radians = degrees * Math.PI / 180;\n                            var radius = options.radius;\n                            var increment = 0;\n                            if (g === 1) {\n                                increment += (l * l * l * 0.005);\n                            } else {\n                                increment += (l * l * l * 0.005);\n                            }\n                            v = new THREE.Vector3();\n                            v.sincos = {\n                                base: radius,\n                                increment: increment,\n                                radius: radius,\n                                x: Math.cos(radians),\n                                y: Math.sin(radians),\n                            };\n                            geometry.vertices.push(v);\n                            return v;\n                        });\n                        geometry.vertices.push(points[0]);\n                        return points;\n                    }\n\n                    function updateLine(geometry, vertices, l, g) {\n                        var audioStrength = options.audioStrength,\n                            noiseStrength = options.noiseStrength,\n                            circularStrength = options.circularStrength,\n                            data = analyser.data;\n\n                        angular.forEach(vertices, function(v, i) {\n                            var aia = i % options.bands;\n                            var aib = (pn - 1 - i) % options.bands;\n                            var audioPow = data ? ((data[aia] + data[aib]) / 2) / options.bands : 0;\n                            // var audioPow = data[aia] / options.bands;\n\n                            var nd = g === 1 ? 0 : 64;\n                            var nia = l * pn + ((i + nd + iterator) % pn);\n                            var nib = l * pn + (((pn - 1 - i - nd) + iterator) % pn);\n                            var noisePow = (options.noiseMap[nia] + options.noiseMap[nib]) / 2 / 64;\n\n                            var linePow = 1 - ((ln - l) / ln * circularStrength);\n\n                            var radius = v.sincos.base +\n                                (v.sincos.increment * noisePow) +\n                                (v.sincos.increment * audioPow) +\n                                (noiseStrength * noisePow) * linePow +\n                                (audioStrength * audioPow) * linePow +\n                                // (audioStrength * (3 - g) * audioPow * (l * 0.1)) * linePow +\n                                0;\n\n                            v.sincos.radius = radius;\n                            // v.sincos.radius += (radius - v.sincos.radius) / 2;\n\n                            v.x = v.sincos.x * v.sincos.radius;\n                            v.y = v.sincos.y * v.sincos.radius;\n                            v.z = 10 * g; // -l;\n                            // console.log(v.sincos.radius);\n                        });\n\n                        /*\n                        var f = 0;\n                        var l = pn - 1;\n                        var first = new THREE.Vector3().copy(vertices[f]);\n                        var last = new THREE.Vector3().copy(vertices[l]);\n                        vertices[f].add(new THREE.Vector3().subVectors(first, last).multiplyScalar(0.5));\n                        vertices[l].add(new THREE.Vector3().subVectors(first, last).multiplyScalar(-0.5));\n                        */\n\n                        geometry.verticesNeedUpdate = true;\n\n                        /*\n                                    lines.forEach( function( l, i ) {\n                        if( params.animateWidth ) l.material.uniforms.lineWidth.value = params.lineWidth * ( 1 + .5 * Math.sin( 5 * t + i ) );\n                        if( params.autoRotate ) l.rotation.y += .125 * delta;\n                      l.material.uniforms.visibility.value= params.animateVisibility ? (time/3000) % 1.0 : 1.0;\n                                */\n                        /*\n                        if (iterator === 60 && g === 2 && l === 0) {\n                            console.log('vertices', geometry.vertices.map(function(v) { return v.x + ',' + v.y; }));\n                        }\n                        */\n                    }\n\n                    function updateCircle() {\n                        angular.forEach(lines1, function(line, l) {\n                            updateLine(line.geometry, points1[l], l, 1);\n                            if (useMeshLines) {\n                                meshLines1[l].setGeometry(meshLineGeometries1[l]);\n                            }\n                        });\n\n                        angular.forEach(lines2, function(line, l) {\n                            updateLine(line.geometry, points2[l], l, 2);\n                            if (useMeshLines) {\n                                meshLines2[l].setGeometry(meshLineGeometries2[l]);\n                            }\n                        });\n\n                        group1.rotation.z += 0.001;\n                        group2.rotation.z -= 0.001;\n\n                        var step = stepper.getStepAtIndex(index);\n                        dummy.position.copy(step.circle.position);\n\n                        var position = objects.ribbon.cameraSpline.getPointAt((index + 0.1) / stepper.steps.length);\n                        // var tangent = objects.ribbon.cameraSpline.getTangent(index + 0.1 / stepper.steps.length).normalize().multiplyScalar(300);\n                        // position.add(tangent);\n\n                        position.y += stepper.values.targetHeight;\n                        object.position.copy(position);\n\n                        /*\n                        object.position.x += (position.x + Math.random() * 20 - object.position.x) / 40;\n                        object.position.y += (position.y + Math.random() * 20 - object.position.y) / 40;\n                        object.position.z += (position.z + Math.random() * 20 - object.position.z) / 40;\n*/\n\n                        object.scale.x = object.scale.y = object.scale.z = 0.001 + 0.14 * state.pow;\n                        object.lookAt(camera.position);\n\n                        updateCircleMaterial();\n\n                        // iterator++;\n                    }\n\n                    function updateCircleMaterial() {\n                        material.opacity = state.pow;\n                        material1.opacity = state.pow;\n                        material2.opacity = state.pow;\n                        material1.color = stepper.values.lines;\n                        material2.color = stepper.values.overLines;\n                    }\n\n                    return {\n                        add: add,\n                        remove: remove,\n                        object: object,\n                        state: state,\n                        update: updateCircle,\n                        updateMaterial: updateCircleMaterial,\n                    };\n                }\n\n                function render() {\n                    analyser.update();\n                    if (controls) {\n                        controls.update();\n                    }\n                    if (objects.ribbon) {\n                        objects.ribbon.update();\n                    }\n                    angular.forEach(objects.circles, function(circle) {\n                        if (circle && circle.state.enabled) {\n                            circle.update();\n                        }\n                    });\n                    renderer.render(scene, camera);\n                }\n\n                function loop() {\n                    stats.begin();\n                    render();\n                    stats.end();\n                    requestAnimationFrame(loop);\n                }\n\n                // var mouse = { x: 0, y: 0 };\n                // var mousePos = { x: 0, y: 0 };\n\n                function addListeners() {\n                    function onWindowResize() {\n                        width = window.innerWidth;\n                        height = window.innerHeight;\n                        w2 = width / 2;\n                        h2 = height / 2;\n                        renderer.setSize(width, height);\n                        camera.aspect = width / height;\n                        camera.updateProjectionMatrix();\n                    }\n                    window.addEventListener('resize', onWindowResize, false);\n                    /*\n                    function handleMouseMove(event) {\n                        mouse = { x: event.clientX, y: event.clientY };\n                    }\n\n                    function handleMouseDown(event) {\n                        //\n                    }\n\n                    function handleMouseUp(event) {\n                        //\n                    }\n\n                    function handleTouchStart(event) {\n                        if (event.touches.length > 1) {\n                            event.preventDefault();\n                            mousePos = { x: event.touches[0].pageX, y: event.touches[0].pageY };\n                        }\n                    }\n\n                    function handleTouchEnd(event) {\n                        mousePos = { x: windowHalfX, y: windowHalfY };\n                    }\n\n                    function handleTouchMove(event) {\n                        if (event.touches.length == 1) {\n                            event.preventDefault();\n                            mousePos = { x: event.touches[0].pageX, y: event.touches[0].pageY };\n                        }\n                    }\n                    */\n                    /*\n                    document.addEventListener('mousemove', handleMouseMove, false);\n                    document.addEventListener('mousedown', handleMouseDown, false);\n                    document.addEventListener('mouseup', handleMouseUp, false);\n                    document.addEventListener('touchstart', handleTouchStart, false);\n                    document.addEventListener('touchend', handleTouchEnd, false);\n                    document.addEventListener('touchmove', handleTouchMove, false);\n                    */\n                }\n\n            }\n        };\n    }]);\n\n}());\n/* global angular */\n\n(function() {\n    \"use strict\";\n\n    var app = angular.module('app');\n\n    app.constant('SceneOptions', {\n        colors: {\n            background: 0xeae8e8,\n            lines: 0x3353a4,\n            overLines: 0xb4bfdd,\n        },\n        camera: {\n            cameraHeight: 0,\n            targetHeight: 5,\n        },\n        circle: {\n            position: new THREE.Vector3(),\n        },\n        ribbon: {\n            steps: 12,\n            points: 24,\n            vertices: 2400,\n        },\n        audioVolume: 0.9,\n        bands: 128,\n        points: 128,\n        lines: 32,\n        radius: 200,\n        audioStrength: 100,\n        noiseStrength: 25,\n        circularStrength: 0.90,\n    });\n\n    app.controller('RootCtrl', ['$scope', 'SceneOptions', 'StepperService', 'DatGui', function($scope, SceneOptions, StepperService, DatGui) {\n\n        var scene = {\n            objects: {},\n            options: SceneOptions,\n            stepper: StepperService,\n        };\n\n        var objects = scene.objects;\n        var options = scene.options;\n        var stepper = scene.stepper;\n\n        stepper.init().then(function() {\n            $scope.scene = scene;\n            $scope.stepper = stepper;\n            var gui = new DatGui();\n        });\n\n    }]);\n\n    app.service('StepperService', ['$rootScope', '$q', '$http', 'SceneOptions', function($rootScope, $q, $http, SceneOptions) {\n\n        var stepper = this;\n        var options = SceneOptions;\n\n        var current = 0;\n        var duration = 2.500; // sec\n        var steps = [];\n        var tweens = [];\n\n        var values = {\n            pow: 0,\n            background: new THREE.Color(options.colors.background),\n            lines: new THREE.Color(options.colors.lines),\n            overLines: new THREE.Color(options.colors.overLines),\n            cameraHeight: options.camera.cameraHeight,\n            targetHeight: options.camera.targetHeight,\n        };\n\n        function getItems() {\n            var items = new Array(options.ribbon.steps).fill().map(function(v, i) {\n                return {\n                    id: i + 1,\n                    name: 'Step ' + (i + 1),\n                    colors: angular.copy(SceneOptions.colors),\n                    camera: {\n                        cameraHeight: 0,\n                        targetHeight: 0,\n                    },\n                    circle: {\n                        position: new THREE.Vector3(0, 0, 0),\n                        texture: 'img/rossini-01.png',\n                    },\n                    audio: {\n                        url: \"audio/07-rossini-192.mp3\",\n                    },\n                };\n            });\n            return items;\n        }\n\n        function init() {\n            var deferred = $q.defer();\n            $http.get('json/rossini.js').then(function(response) {\n                var items = getItems();\n                // var items = response.data; \n                angular.forEach(items, function(item) {\n                    item.circle.position = new THREE.Vector3().copy(item.circle.position);\n                    steps.push(item);\n                });\n                console.log('StepperService.load', steps);\n                deferred.resolve(steps);\n\n            }, function(error) {\n                deferred.reject(error);\n\n            });\n            return deferred.promise;\n        }\n\n        function clearTweens() {\n            while (tweens.length) {\n                var tween = tweens.pop();\n                tween.kill();\n            }\n        }\n\n        function tweenTo(pow, step, duration, callback) {\n            clearTweens();\n            var background = new THREE.Color(step.colors.background);\n            var lines = new THREE.Color(step.colors.lines);\n            var overLines = new THREE.Color(step.colors.overLines);\n            tweens.push(TweenLite.to(stepper.values, duration, {\n                pow: pow,\n                cameraHeight: step.camera.cameraHeight,\n                targetHeight: step.camera.targetHeight,\n                delay: 0,\n                ease: Power2.easeInOut,\n                onComplete: function() {\n                    if (callback) {\n                        callback();\n                    }\n                },\n            }));\n            tweens.push(TweenLite.to(stepper.values.background, duration, {\n                r: background.r,\n                g: background.g,\n                b: background.b,\n                delay: 0,\n                ease: Power2.easeInOut,\n                onUpdate: function() {\n                    var color = stepper.values.background.getHexString();\n                    document.body.style.backgroundColor = '#' + color;\n                }\n            }));\n            tweens.push(TweenLite.to(stepper.values.lines, duration, {\n                r: lines.r,\n                g: lines.g,\n                b: lines.b,\n                delay: 0,\n                ease: Power2.easeInOut,\n            }));\n            tweens.push(TweenLite.to(stepper.values.overLines, duration, {\n                r: overLines.r,\n                g: overLines.g,\n                b: overLines.b,\n                delay: 0,\n                ease: Power2.easeInOut,\n            }));\n        }\n\n        function setTweens(duration) {\n            var index = stepper.current;\n            var step = steps[index];\n            tweenTo(index / steps.length, step, duration, function() {\n                clearTweens();\n                console.log(step, stepper.values);\n                $rootScope.$broadcast('onStepComplete', { current: index });\n            });\n        }\n\n        $rootScope.$on('onOptionsChanged', function() {\n            var index = stepper.current;\n            var step = steps[index];\n            stepper.values.cameraHeight = step.camera.cameraHeight;\n            stepper.values.targetHeight = step.camera.targetHeight;\n            stepper.values.background.copy(new THREE.Color(step.colors.background));\n            stepper.values.lines.copy(new THREE.Color(step.colors.lines));\n            stepper.values.overLines.copy(new THREE.Color(step.colors.overLines));\n            // setTweens(0.250);\n        });\n\n        function setStep(index) {\n            var previous = stepper.current || 0;\n            stepper.current = index;\n            var step = steps[index];\n            options.colors.background = step.colors.background;\n            options.colors.lines = step.colors.lines;\n            options.colors.overLines = step.colors.overLines;\n            options.camera.cameraHeight = step.camera.cameraHeight;\n            options.camera.targetHeight = step.camera.targetHeight;\n            options.circle.position.copy(step.circle.position);\n            $rootScope.$broadcast('onStepChanged', { current: index, previous: previous });\n            setTweens(stepper.duration);\n        }\n\n        function next() {\n            current++;\n            current = Math.min(steps.length - 1, current);\n            setStep(current);\n        }\n\n        function previous() {\n            current--;\n            current = Math.max(0, current);\n            setStep(current);\n        }\n\n        function getCurrentStep() {\n            return steps[current];\n        }\n\n        function getStepAtIndex(index) {\n            return steps[index];\n        }\n\n        this.init = init;\n        this.values = values;\n        this.duration = duration;\n        this.steps = steps;\n        this.current = current;\n        this.next = next;\n        this.previous = previous;\n        this.getCurrentStep = getCurrentStep;\n        this.getStepAtIndex = getStepAtIndex;\n\n    }]);\n\n    app.factory('DatGui', ['$rootScope', 'SceneOptions', 'StepperService', function($rootScope, SceneOptions, StepperService) {\n\n        var downloadFile = function downloadFile() {\n            var a = document.createElement(\"a\");\n            document.body.appendChild(a);\n            a.style = \"display: none\";\n            return function(data, fileName, json, pretty) {\n                if (json) {\n                    if (pretty) {\n                        data = JSON.stringify(data, null, 2); // spacing level = 2\n                    } else {\n                        data = JSON.stringify(data);\n                    }\n                }\n                var blob = new Blob([data], { type: \"octet/stream\" }),\n                    url = window.URL.createObjectURL(blob);\n                a.href = url;\n                a.download = fileName;\n                a.click();\n                window.URL.revokeObjectURL(url);\n            };\n        }();\n\n        function DatGui() {\n            var options = SceneOptions;\n            var stepper = StepperService;\n            var gui = new dat.GUI();\n\n            options.randomize = function() {\n                for (var i = 0; i < gui.__controllers.length; i++) {\n                    var c = gui.__controllers[i];\n                    if (c.__min) {\n                        var value = c.__min + (c.__max - c.__min) * Math.random();\n                        this[c.property] = value;\n                        c.updateDisplay();\n                    }\n                    if (c.__color) {\n                        c.__color.r = Math.floor(Math.random() * 255);\n                        c.__color.g = Math.floor(Math.random() * 255);\n                        c.__color.b = Math.floor(Math.random() * 255);\n                        c.updateDisplay();\n                        c.setValue(c.__color.hex);\n                    }\n                }\n            };\n\n            options.saveJson = function() {\n                console.log('saveJson');\n                downloadFile(stepper.steps, 'rossini.js', true, true);\n            };\n\n            function onOptionsChanged(params) {\n                var step = stepper.getCurrentStep();\n                step.colors.background = options.colors.background;\n                step.colors.lines = options.colors.lines;\n                step.colors.overLines = options.colors.overLines;\n                step.camera.cameraHeight = options.camera.cameraHeight;\n                step.camera.targetHeight = options.camera.targetHeight;\n                step.circle.position.copy(options.circle.position);\n                $rootScope.$broadcast('onOptionsChanged');\n            }\n\n            gui.closed = true;\n            gui.add(options.camera, 'cameraHeight', -20.0, 20.0).listen().onChange(onOptionsChanged);\n            gui.add(options.camera, 'targetHeight', -20.0, 20.0).listen().onChange(onOptionsChanged);\n            var circlePosition = gui.addFolder('circlePosition');\n            circlePosition.add(options.circle.position, 'x', -300, 300).listen().onChange(onOptionsChanged);\n            circlePosition.add(options.circle.position, 'y', -300, 300).listen().onChange(onOptionsChanged);\n            circlePosition.add(options.circle.position, 'z', -300, 300).listen().onChange(onOptionsChanged);\n            var colors = gui.addFolder('colors');\n            colors.addColor(options.colors, 'background').listen().onChange(onOptionsChanged);\n            colors.addColor(options.colors, 'lines').listen().onChange(onOptionsChanged);\n            colors.addColor(options.colors, 'overLines').listen().onChange(onOptionsChanged);\n            gui.add(options, 'audioVolume', 0.01, 1.0).onChange(onOptionsChanged);\n            gui.add(options, 'audioStrength', 10, 100).onChange(onOptionsChanged);\n            gui.add(options, 'noiseStrength', 10, 100).onChange(onOptionsChanged);\n            gui.add(options, 'circularStrength', 0.01, 0.90).onChange(onOptionsChanged);\n            gui.add(options, 'randomize');\n            gui.add(options, 'saveJson');\n\n            onOptionsChanged();\n\n            return gui;\n        }\n\n        return DatGui;\n\n    }]);\n\n    app.directive('scrollbar', [function() {\n        return {\n            restrict: 'A',\n            link: function(scope, element, attributes, model) {\n                var native = element[0];\n                var options = {\n                    speed: 1,\n                    damping: 0.1,\n                    overscrollDamping: 1.0,\n                    thumbMinSize: 20,\n                    continuousScrolling: true,\n                    alwaysShowTracks: false\n                };\n                var scrollbar;\n\n                function Init() {\n                    scrollbar = Scrollbar.init(native, options);\n                    scope.$watch(scrollbar.targets.content.offsetHeight, function(height) {\n                        scrollbar.update();\n                    });\n                }\n                setTimeout(Init, 100);\n            }\n        };\n    }]);\n\n}());"]}