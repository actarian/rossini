{"version":3,"sources":["docs/js/app.js"],"names":["angular","module","config","$httpProvider","$locationProvider","html5Mode","hashPrefix","run","$rootScope","getPerlinNoise","width","height","size","data","Uint8Array","perlin","ImprovedNoise","quality","z","Math","random","j","i","x","y","abs","noise","fade","t","lerp","a","b","grad","hash","h","u","v","p","floorX","floor","floorY","floorZ","X","Y","Z","xMinus1","yMinus1","zMinus1","w","A","AA","AB","B","BA","BB","getRandomRange","min","max","allowNegatives","n","app","Number","prototype","mod","this","service","$q","$http","SceneOptions","init","source","ctx","actx","window","AudioContext","webkitAudioContext","analyser","createAnalyser","audio","Audio","src","options","audioUrl","controls","addEventListener","bufferLength","console","log","createMediaElementSource","connect","destination","fftSize","bands","frequencyBinCount","volume","audioVolume","play","update","getByteFrequencyData","$on","$scope","directive","StepperService","AnalyserService","restrict","scope","link","element","attributes","getObjectRibbon","add","scene","object","remove","updateRibbon","c","stepper","steps","length","cpow","values","pow","tpow","step","getCurrentStep","position","cameraSpline","getPointAt","camera","cameraHeight","target","targetHeight","copy","lookAt","getMaterial","THREE","Vector2","innerWidth","innerHeight","MeshLineMaterial","color","lines","lineWidth","depthTest","updateRibbonMaterial","objects","ribbon","material","prev","Vector3","points","Array","fill","map","spline","CatmullRomCurve3","type","closed","geometry","Geometry","vertices","getPoints","line","MeshLine","setGeometry","Mesh","updateMaterial","getObjectCircles","index","state","adding","Date","now","removing","enabled","tween","kill","TweenLite","to","duration","delay","ease","Power2","easeInOut","onComplete","getLine1","addPoints","LineLoop","material1","points1","push","group1","getLine2","material2","points2","group2","l","g","pn","ratio","degrees","radians","PI","radius","increment","sincos","base","cos","sin","updateLine","audioStrength","noiseStrength","circularStrength","forEach","aia","aib","audioPow","nd","nia","iterator","nib","noisePow","noiseMap","linePow","ln","verticesNeedUpdate","updateCircle","lines1","lines2","rotation","getStepAtIndex","dummy","circle","scale","updateCircleMaterial","overLines","LineBasicMaterial","Object3D","texture","TextureLoader","load","wrapS","RepeatWrapping","wrapT","repeat","set","MeshBasicMaterial","transparent","PlaneGeometry","plane","render","circles","renderer","loop","stats","begin","end","requestAnimationFrame","w2","h2","current","previous","setTimeout","Scene","PerspectiveCamera","WebGLRenderer","alpha","antialias","logarithmicDepthBuffer","setClearColor","setSize","Stats","appendChild","domElement","dom","onWindowResize","aspect","updateProjectionMatrix","constant","colors","background","controller","DatGui","then","getItems","id","name","deferred","defer","get","response","items","item","resolve","error","reject","promise","clearTweens","tweens","pop","tweenTo","callback","Color","r","onUpdate","getHexString","document","body","style","backgroundColor","setTweens","setStep","$broadcast","next","factory","onOptionsChanged","params","gui","dat","GUI","randomize","__controllers","__min","value","__max","property","updateDisplay","__color","setValue","hex","saveJson","downloadFile","onChange","circlePosition","addFolder","addColor","createElement","fileName","json","pretty","JSON","stringify","blob","Blob","url","URL","createObjectURL","href","download","click","revokeObjectURL"],"mappings":"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","file":"app.min.js","sourcesContent":["/* global angular */\r\n\r\n(function() {\r\n    \"use strict\";\r\n\r\n    var app = angular.module('app', ['ngRoute', 'jsonFormatter']);\r\n\r\n}());\n/* global angular */\r\n\r\n(function() {\r\n    \"use strict\";\r\n\r\n    var app = angular.module('app');\r\n\r\n    app.config(['$httpProvider', function($httpProvider) {\r\n        // $httpProvider.defaults.withCredentials = true;\r\n    }]);\r\n\r\n}());\n/* global angular */\r\n\r\n(function() {\r\n    \"use strict\";\r\n\r\n    var app = angular.module('app');\r\n\r\n    app.config(['$locationProvider', function($locationProvider) {\r\n\r\n        // HTML5 MODE url writing method (false: #/anchor/use, true: /html5/url/use)\r\n        $locationProvider.html5Mode(true);\r\n        $locationProvider.hashPrefix('');\r\n\r\n    }]);\r\n\r\n}());\n/* global angular */\r\n\r\n(function() {\r\n    \"use strict\";\r\n\r\n    var app = angular.module('app');\r\n\r\n    app.run(['$rootScope', function($rootScope) {\r\n\r\n    }]);\r\n\r\n}());\n/* global angular */\n\n(function() {\n    \"use strict\";\n\n    var app = angular.module('app');\n\n    Number.prototype.mod = function(n) {\n        return ((this % n) + n) % n;\n    };\n\n    function getPerlinNoise(width, height) {\n        var size = width * height,\n            data = new Uint8Array(size),\n            perlin = new ImprovedNoise(),\n            quality = 1,\n            z = Math.random() * 100;\n        for (var j = 0; j < 4; j++) {\n            for (var i = 0; i < size; i++) {\n                var x = i % width,\n                    y = ~~(i / width);\n                data[i] += Math.abs(perlin.noise(x / quality, y / quality, z) * quality * 1.75);\n            }\n            quality *= 5;\n        }\n        return data;\n    }\n\n    function ImprovedNoise() {\n        var p = [151, 160, 137, 91, 90, 15, 131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10,\n            23, 190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33, 88, 237, 149, 56, 87,\n            174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166, 77, 146, 158, 231, 83, 111, 229, 122, 60, 211,\n            133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244, 102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208,\n            89, 18, 169, 200, 196, 135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123, 5,\n            202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42, 223, 183, 170, 213, 119,\n            248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9, 129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232,\n            178, 185, 112, 104, 218, 246, 97, 228, 251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249,\n            14, 239, 107, 49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254, 138, 236, 205,\n            93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180\n        ];\n        for (var i = 0; i < 256; i++) {\n            p[256 + i] = p[i];\n        }\n\n        function fade(t) {\n            return t * t * t * (t * (t * 6 - 15) + 10);\n        }\n\n        function lerp(t, a, b) {\n            return a + t * (b - a);\n        }\n\n        function grad(hash, x, y, z) {\n            var h = hash & 15;\n            var u = h < 8 ? x : y,\n                v = h < 4 ? y : h == 12 || h == 14 ? x : z;\n            return ((h & 1) === 0 ? u : -u) + ((h & 2) === 0 ? v : -v);\n        }\n\n        return {\n            noise: function(x, y, z) {\n                var floorX = Math.floor(x),\n                    floorY = Math.floor(y),\n                    floorZ = Math.floor(z);\n                var X = floorX & 255,\n                    Y = floorY & 255,\n                    Z = floorZ & 255;\n                x -= floorX;\n                y -= floorY;\n                z -= floorZ;\n                var xMinus1 = x - 1,\n                    yMinus1 = y - 1,\n                    zMinus1 = z - 1;\n                var u = fade(x),\n                    v = fade(y),\n                    w = fade(z);\n                var A = p[X] + Y,\n                    AA = p[A] + Z,\n                    AB = p[A + 1] + Z,\n                    B = p[X + 1] + Y,\n                    BA = p[B] + Z,\n                    BB = p[B + 1] + Z;\n                return lerp(w, lerp(v, lerp(u, grad(p[AA], x, y, z),\n                            grad(p[BA], xMinus1, y, z)),\n                        lerp(u, grad(p[AB], x, yMinus1, z),\n                            grad(p[BB], xMinus1, yMinus1, z))),\n                    lerp(v, lerp(u, grad(p[AA + 1], x, y, zMinus1),\n                            grad(p[BA + 1], xMinus1, y, z - 1)),\n                        lerp(u, grad(p[AB + 1], x, yMinus1, zMinus1),\n                            grad(p[BB + 1], xMinus1, yMinus1, zMinus1))));\n\n            }\n        };\n    }\n\n    function getRandomRange(min, max, allowNegatives) {\n        var n = -1 + Math.random() * 2;\n        var a = Math.abs(n);\n        var s = allowNegatives ? Math.floor(n / a) : 1;\n        return s * (min + (max - min) * a);\n    }\n\n    app.service('AnalyserService', ['$rootScope', '$q', '$http', 'SceneOptions', function($rootScope, $q, $http, SceneOptions) {\n\n        var service = this;\n        var options = SceneOptions;\n        var analyser, audio;\n\n        function init() {\n            var source, ctx, actx = (window.AudioContext || window.webkitAudioContext);\n            source = null;\n            ctx = new actx();\n            analyser = ctx.createAnalyser();\n            audio = new Audio();\n            audio.src = options.audioUrl;\n            audio.controls = true;\n            audio.addEventListener('canplay', function() {\n                var bufferLength;\n                console.log('audio canplay');\n                source = ctx.createMediaElementSource(audio);\n                source.connect(analyser);\n                source.connect(ctx.destination);\n                analyser.fftSize = options.bands * 2;\n                bufferLength = analyser.frequencyBinCount;\n                console.log('bufferLength', bufferLength);\n                service.data = new Uint8Array(bufferLength);\n                return service.data;\n            });\n            audio.volume = options.audioVolume;\n            audio.play();\n        }\n\n        function update() {\n            if (service.data) {\n                analyser.getByteFrequencyData(service.data);\n            }\n        }\n\n        $rootScope.$on('onOptionsChanged', function($scope) {\n            if (audio) {\n                audio.volume = options.audioVolume;\n            }\n        });\n\n        this.audio = audio;\n        this.data = null;\n        this.init = init;\n        this.update = update;\n\n    }]);\n\n    app.directive('scene', ['SceneOptions', 'StepperService', 'AnalyserService', function(SceneOptions, StepperService, AnalyserService) {\n        return {\n            restrict: 'A',\n            scope: {\n                data: '=scene',\n            },\n            link: function(scope, element, attributes) {\n                var data = scope.data;\n                if (!data) {\n                    return;\n                }\n\n                var objects = data.objects;\n\n                var options = SceneOptions;\n                var stepper = StepperService;\n                var analyser = AnalyserService;\n\n                options.noiseMap = getPerlinNoise(options.points, options.lines);\n\n                var stats, scene, camera, shadow, back, light, renderer, width, height, w2, h2, mouse = { x: 0, y: 0 };\n                var controls = null;\n\n                scope.$on('onStep', function($scope, step) {\n                    console.log('onStep', step.current);\n                    var circle = null;\n                    var current = step.current,\n                        previous = step.previous;\n                    if (current > 0) {\n                        circle = objects.circles[current] || getObjectCircles(current);\n                        circle.add();\n                    }\n                    objects.circles[current] = circle;\n                    setTimeout(function() {\n                        if (stepper.current !== previous && previous > 0) {\n                            var circle = objects.circles[previous];\n                            if (circle) {\n                                circle.remove();\n                            }\n                        }\n                    }, stepper.duration * 1000);\n                    console.log('objects', objects);\n                });\n\n                scope.$on('onOptionsChanged', function($scope) {\n                    // renderer.setClearColor(stepper.values.background, 1);\n                    if (objects.ribbon) {\n                        objects.ribbon.updateMaterial();\n                    }\n                    angular.forEach(objects.circles, function(circle) {\n                        if (circle) {\n                            circle.updateMaterial();\n                        }\n                    });\n                });\n\n                createScene();\n                // createLights();\n                createObjects();\n                addListeners();\n                loop();\n                analyser.init();\n\n                function createScene() {\n                    width = window.innerWidth;\n                    height = window.innerHeight;\n                    w2 = width / 2;\n                    h2 = height / 2;\n\n                    var ratio = width / height;\n                    var fov = 30;\n                    var near = 0.001;\n                    var far = 20000;\n\n                    scene = new THREE.Scene();\n                    // scene.fog = new THREE.Fog(0x000000, 300, 1000);\n\n                    camera = new THREE.PerspectiveCamera(fov, ratio, near, far);\n                    /*\n                    camera.position.z = 100;\n                    camera.position.y = -500;\n                    camera.lookAt(new THREE.Vector3(0, 0, 0));\n                    */\n\n                    renderer = new THREE.WebGLRenderer({\n                        alpha: true,\n                        antialias: true,\n                        logarithmicDepthBuffer: true\n                    });\n\n                    renderer.setClearColor(0x000000, 0); // the default\n                    // renderer.setClearColor(stepper.values.background, 1);\n                    renderer.setSize(width, height);\n                    // renderer.shadowMap.enabled = true;\n\n                    stats = new Stats();\n                    element[0].appendChild(renderer.domElement);\n                    element[0].appendChild(stats.dom);\n                }\n\n                function createLights() {\n                    light = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.5);\n                    shadow = new THREE.DirectionalLight(0xffffff, 0.8);\n                    shadow.position.set(200, 200, 200);\n                    shadow.castShadow = true;\n                    // shadow.shadowDarkness = .2;\n                    back = new THREE.DirectionalLight(0xffffff, 0.4);\n                    back.position.set(-100, 200, 50);\n                    // back.shadowDarkness = .2;\n                    back.castShadow = true;\n                    scene.add(light);\n                    scene.add(shadow);\n                    scene.add(back);\n                }\n\n                function createObjects() {\n                    objects.ribbon = getObjectRibbon();\n                    objects.circles = new Array(stepper.steps).fill(null);\n                }\n\n                function getObjectRibbon() {\n                    var material = getMaterial();\n\n                    var prev = new THREE.Vector3();\n                    var points = new Array(options.ribbon.points).fill(null).map(function() {\n                        var p = new THREE.Vector3().copy(prev);\n                        prev.x += getRandomRange(500, 1000, true);\n                        prev.y += getRandomRange(20, 60, true);\n                        prev.z += getRandomRange(1000, 2000, false);\n                        return p;\n                    });\n\n                    var spline = new THREE.CatmullRomCurve3(points);\n                    spline.type = 'catmullrom';\n                    spline.closed = false;\n\n                    var cameraSpline = new THREE.CatmullRomCurve3(spline.points.map(function(p) {\n                        return new THREE.Vector3(p.x, p.y + 30, p.z);\n                    }));\n                    cameraSpline.type = 'catmullrom';\n                    cameraSpline.closed = false;\n\n                    var geometry = new THREE.Geometry();\n                    geometry.vertices = spline.getPoints(options.ribbon.vertices);\n\n                    var line = new MeshLine();\n                    line.setGeometry(geometry);\n\n                    // line.setGeometry( geometry, function( p ) { return 2; } ); // makes width 2 * lineWidth\n                    // line.setGeometry( geometry, function( p ) { return 1 - p; } ); // makes width taper\n                    // line.setGeometry( geometry, function( p ) { return 2 + Math.sin( 50 * p ); } ); // makes width sinusoidal\n\n                    var object = new THREE.Mesh(line.geometry, material);\n                    add();\n\n                    function add() {\n                        console.log('objects.ribbon.add');\n                        scene.add(object);\n                    }\n\n                    function remove() {\n                        console.log('objects.ribbon.remove');\n                        scene.remove(object);\n                    }\n\n                    camera.target = camera.target || new THREE.Vector3(0, 0, 0);\n\n                    function updateRibbon() {\n                        var c = (1 / stepper.steps.length) * 0.1;\n                        var cpow = stepper.values.pow;\n                        var tpow = (cpow + c).mod(1);\n                        var step = stepper.getCurrentStep();\n                        var position = cameraSpline.getPointAt(cpow);\n                        position.y += options.camera.cameraHeight;\n                        position.y += step.camera.cameraHeight;\n                        var target = cameraSpline.getPointAt(tpow);\n                        // var tangent = cameraSpline.getTangent(tpow).normalize().multiplyScalar(100);\n                        // target.add(tangent);\n                        target.y += options.camera.targetHeight;\n                        target.y += step.camera.targetHeight;\n                        camera.position.copy(position);\n                        camera.target.copy(target);\n                        camera.lookAt(camera.target);\n                    }\n\n                    function getMaterial() {\n                        var resolution = new THREE.Vector2(window.innerWidth, window.innerHeight);\n                        return new MeshLineMaterial({\n                            color: stepper.values.lines,\n                            lineWidth: 5,\n                            depthTest: true,\n                            /*\n                            opacity: 1,\n                            resolution: resolution,\n                            sizeAttenuation: 1,\n                            near: 1,\n                            far: 1000,\n                            blending: THREE.AdditiveBlending,\n                            transparent: false,\n                            side: THREE.DoubleSide,\n                            */\n                        });\n                    }\n\n                    function updateRibbonMaterial() {\n                        // !!! non va bene\n                        objects.ribbon.material = getMaterial();\n                        objects.ribbon.object.material = objects.ribbon.material;\n                    }\n\n                    return {\n                        object: object,\n                        spline: spline,\n                        cameraSpline: cameraSpline,\n                        geometry: geometry,\n                        material: material,\n                        add: add,\n                        remove: remove,\n                        update: updateRibbon,\n                        updateMaterial: updateRibbonMaterial,\n                    };\n                }\n\n                function getObjectCircles(index) {\n                    var geometry, object, circles = [];\n\n                    // materials\n                    var material1 = new THREE.LineBasicMaterial({\n                        color: stepper.values.lines,\n                    });\n\n                    var material2 = new THREE.LineBasicMaterial({\n                        color: stepper.values.overLines,\n                    });\n\n                    var resolution = new THREE.Vector2(window.innerWidth, window.innerHeight);\n\n                    object = new THREE.Object3D();\n\n                    var points1 = [],\n                        points2 = [],\n                        meshLines1 = [],\n                        meshLines2 = [],\n                        meshLineGeometries1 = [],\n                        meshLineGeometries2 = [],\n                        useMeshLines = false;\n\n                    var pn = options.points,\n                        ln = options.lines;\n\n                    var dummy = new THREE.Object3D();\n                    object.add(dummy);\n\n                    // circle\n                    var step = stepper.steps[index];\n                    var texture = new THREE.TextureLoader().load(step.circle.texture);\n                    texture.wrapS = THREE.RepeatWrapping;\n                    texture.wrapT = THREE.RepeatWrapping;\n                    texture.repeat.set(1, 1);\n                    var material = new THREE.MeshBasicMaterial({\n                        color: 0xffffff,\n                        map: texture,\n                        transparent: true,\n                    });\n                    geometry = new THREE.PlaneGeometry(options.radius * 2 - 20, options.radius * 2 - 20, 8, 8);\n                    var plane = new THREE.Mesh(geometry, material);\n                    dummy.add(plane);\n                    // circle\n\n                    var group1 = new THREE.Object3D();\n                    dummy.add(group1);\n\n                    var group2 = new THREE.Object3D();\n                    dummy.add(group2);\n\n                    var lines1 = new Array(ln).fill(null).map(getLine1);\n                    var lines2 = new Array(ln).fill(null).map(getLine2);\n\n                    var state = {\n                        pow: 0,\n                        duration: 0.350,\n                        enabled: false,\n                        adding: false,\n                        removing: false,\n                    };\n\n                    var to = null;\n\n                    function add() {\n                        console.log('objects.circles.add');\n                        scene.add(object);\n                        state.adding = Date.now();\n                        state.removing = false;\n                        state.enabled = true;\n                        if (state.tween) {\n                            state.tween.kill();\n                        }\n                        state.tween = TweenLite.to(state, state.duration, {\n                            pow: 1,\n                            delay: 0,\n                            ease: Power2.easeInOut,\n                            onComplete: function() {\n                                state.adding = false;\n                            },\n                        });\n                    }\n\n                    function remove() {\n                        console.log('objects.circles.remove');\n                        state.adding = false;\n                        state.removing = Date.now();\n                        if (state.tween) {\n                            state.tween.kill();\n                        }\n                        state.tween = TweenLite.to(state, state.duration, {\n                            pow: 0,\n                            delay: 0,\n                            ease: Power2.easeInOut,\n                            onComplete: function() {\n                                state.removing = false;\n                                state.enabled = false;\n                                scene.remove(object);\n                            },\n                        });\n                    }\n\n                    var iterator = 0;\n\n                    function getLine1(v, i) {\n                        var geometry = new THREE.Geometry();\n                        var points = addPoints(geometry, i, 1);\n                        var line = null;\n                        line = new THREE.LineLoop(geometry, material1);\n                        points1.push(points);\n                        // var spline = new THREE.CatmullRomCurve3(points);\n                        // circle.spline = spline;\n                        group1.add(line);\n                        return line;\n                    }\n\n                    function getLine2(v, i) {\n                        var geometry = new THREE.Geometry();\n                        var points = addPoints(geometry, i, 2);\n                        var line = null;\n                        line = new THREE.LineLoop(geometry, material2);\n                        points2.push(points);\n                        // var spline = new THREE.CatmullRomCurve3(points);\n                        // circle.spline = spline;\n                        group2.add(line);\n                        return line;\n                    }\n\n                    function addPoints(geometry, l, g) {\n                        var points = new Array(pn).fill(null).map(function(v, i) {\n                            var ratio = i / pn;\n                            var degrees = 360 * ratio; // point degrees;\n                            degrees += 60 * index; // circle offset;\n                            degrees += 30 * g; // group offset;\n                            degrees += (360 / pn * 0.1) * l; // line offset;\n                            var radians = degrees * Math.PI / 180;\n                            var radius = options.radius;\n                            var increment = 0;\n                            if (g === 1) {\n                                increment += (l * l * l * 0.005);\n                            } else {\n                                increment += (l * l * l * 0.005);\n                            }\n                            v = new THREE.Vector3();\n                            v.sincos = {\n                                base: radius,\n                                increment: increment,\n                                radius: radius,\n                                x: Math.cos(radians),\n                                y: Math.sin(radians),\n                            };\n                            geometry.vertices.push(v);\n                            return v;\n                        });\n                        return points;\n                    }\n\n                    function updateLine(geometry, vertices, l, g) {\n                        var audioStrength = options.audioStrength,\n                            noiseStrength = options.noiseStrength,\n                            circularStrength = options.circularStrength,\n                            data = analyser.data;\n\n                        angular.forEach(vertices, function(v, i) {\n                            var aia = i % options.bands;\n                            var aib = (pn - 1 - i) % options.bands;\n                            var audioPow = data ? ((data[aia] + data[aib]) / 2) / options.bands : 0;\n                            // var audioPow = data[aia] / options.bands;\n\n                            var nd = g === 1 ? 0 : 64;\n                            var nia = l * pn + ((i + nd + iterator) % pn);\n                            var nib = l * pn + (((pn - 1 - i - nd) + iterator) % pn);\n                            var noisePow = (options.noiseMap[nia] + options.noiseMap[nib]) / 2 / 64;\n\n                            var linePow = 1 - ((ln - l) / ln * circularStrength);\n\n                            var radius = v.sincos.base +\n                                (v.sincos.increment * noisePow) +\n                                (v.sincos.increment * audioPow) +\n                                (noiseStrength * noisePow) * linePow +\n                                (audioStrength * audioPow) * linePow +\n                                // (audioStrength * (3 - g) * audioPow * (l * 0.1)) * linePow +\n                                0;\n\n                            v.sincos.radius = radius;\n                            // v.sincos.radius += (radius - v.sincos.radius) / 2;\n\n                            v.x = v.sincos.x * v.sincos.radius;\n                            v.y = v.sincos.y * v.sincos.radius;\n                            v.z = 0; // -l;\n                            // console.log(v.sincos.radius);\n                        });\n\n                        /*\n                        var f = 0;\n                        var l = pn - 1;\n                        var first = new THREE.Vector3().copy(vertices[f]);\n                        var last = new THREE.Vector3().copy(vertices[l]);\n                        vertices[f].add(new THREE.Vector3().subVectors(first, last).multiplyScalar(0.5));\n                        vertices[l].add(new THREE.Vector3().subVectors(first, last).multiplyScalar(-0.5));\n                        */\n\n                        geometry.verticesNeedUpdate = true;\n\n                        /*\n                                    lines.forEach( function( l, i ) {\n                        if( params.animateWidth ) l.material.uniforms.lineWidth.value = params.lineWidth * ( 1 + .5 * Math.sin( 5 * t + i ) );\n                        if( params.autoRotate ) l.rotation.y += .125 * delta;\n                      l.material.uniforms.visibility.value= params.animateVisibility ? (time/3000) % 1.0 : 1.0;\n                                */\n                        /*\n                        if (iterator === 60 && g === 2 && l === 0) {\n                            console.log('vertices', geometry.vertices.map(function(v) { return v.x + ',' + v.y; }));\n                        }\n                        */\n                    }\n\n                    function updateCircle() {\n                        angular.forEach(lines1, function(line, l) {\n                            updateLine(line.geometry, points1[l], l, 1);\n                        });\n\n                        angular.forEach(lines2, function(line, l) {\n                            updateLine(line.geometry, points2[l], l, 2);\n                        });\n\n                        group1.rotation.z += 0.001;\n                        group2.rotation.z -= 0.001;\n\n                        var step = stepper.getStepAtIndex(index);\n                        dummy.position.copy(step.circle.position);\n\n                        var position = objects.ribbon.cameraSpline.getPointAt((index + 0.1) / stepper.steps.length);\n                        // var tangent = objects.ribbon.cameraSpline.getTangent(index + 0.1 / stepper.steps.length).normalize().multiplyScalar(300);\n                        // position.add(tangent);\n\n                        position.y += options.camera.targetHeight;\n                        object.position.copy(position);\n\n                        /*\n                        object.position.x += (position.x + Math.random() * 20 - object.position.x) / 20;\n                        object.position.y += (position.y + Math.random() * 20 - object.position.y) / 20;\n                        object.position.z += (position.z + Math.random() * 20 - object.position.z) / 20;\n                        */\n\n                        object.scale.x = object.scale.y = object.scale.z = 0.001 + 0.1 * state.pow;\n                        object.lookAt(camera.position);\n\n                        updateCircleMaterial();\n\n                        // iterator++;\n                    }\n\n                    function updateCircleMaterial() {\n                        material1.color = stepper.values.lines;\n                        material2.color = stepper.values.overLines;\n                    }\n\n                    return {\n                        add: add,\n                        remove: remove,\n                        object: object,\n                        state: state,\n                        update: updateCircle,\n                        updateMaterial: updateCircleMaterial,\n                    };\n                }\n\n                function render() {\n                    analyser.update();\n                    if (controls) {\n                        controls.update();\n                    }\n                    if (objects.ribbon) {\n                        objects.ribbon.update();\n                    }\n                    angular.forEach(objects.circles, function(circle) {\n                        if (circle && circle.state.enabled) {\n                            circle.update();\n                        }\n                    });\n                    renderer.render(scene, camera);\n                }\n\n                function loop() {\n                    stats.begin();\n                    render();\n                    stats.end();\n                    requestAnimationFrame(loop);\n                }\n\n                function addListeners() {\n                    function handleMouseMove(event) {\n                        mouse = { x: event.clientX, y: event.clientY };\n                    }\n\n                    function handleMouseDown(event) {\n                        //\n                    }\n\n                    function handleMouseUp(event) {\n                        //\n                    }\n\n                    function handleTouchStart(event) {\n                        if (event.touches.length > 1) {\n                            event.preventDefault();\n                            mousePos = { x: event.touches[0].pageX, y: event.touches[0].pageY };\n                        }\n                    }\n\n                    function handleTouchEnd(event) {\n                        mousePos = { x: windowHalfX, y: windowHalfY };\n                    }\n\n                    function handleTouchMove(event) {\n                        if (event.touches.length == 1) {\n                            event.preventDefault();\n                            mousePos = { x: event.touches[0].pageX, y: event.touches[0].pageY };\n                        }\n                    }\n\n                    function onWindowResize() {\n                        width = window.innerWidth;\n                        height = window.innerHeight;\n                        w2 = width / 2;\n                        h2 = height / 2;\n                        renderer.setSize(width, height);\n                        camera.aspect = width / height;\n                        camera.updateProjectionMatrix();\n                    }\n                    window.addEventListener('resize', onWindowResize, false);\n                    /*\n                    document.addEventListener('mousemove', handleMouseMove, false);\n                    document.addEventListener('mousedown', handleMouseDown, false);\n                    document.addEventListener('mouseup', handleMouseUp, false);\n                    document.addEventListener('touchstart', handleTouchStart, false);\n                    document.addEventListener('touchend', handleTouchEnd, false);\n                    document.addEventListener('touchmove', handleTouchMove, false);\n                    */\n                }\n\n            }\n        };\n    }]);\n\n}());\n/* global angular */\n\n(function() {\n    \"use strict\";\n\n    var app = angular.module('app');\n\n    app.constant('SceneOptions', {\n        colors: {\n            background: 0xeae8e8,\n            lines: 0x3353a4,\n            overLines: 0xb4bfdd,\n        },\n        camera: {\n            cameraHeight: 33,\n            targetHeight: 39,\n        },\n        circle: {\n            position: new THREE.Vector3(),\n        },\n        ribbon: {\n            points: 40, // 12\n            vertices: 3600, // 1200\n        },\n        audioUrl: \"audio/rossini-192.mp3\",\n        audioVolume: 0.9,\n        bands: 128,\n        points: 128,\n        lines: 32,\n        radius: 200,\n        audioStrength: 100,\n        noiseStrength: 25,\n        circularStrength: 0.90,\n    });\n\n    app.controller('RootCtrl', ['$scope', 'SceneOptions', 'StepperService', 'DatGui', function($scope, SceneOptions, StepperService, DatGui) {\n\n        var scene = {\n            objects: {},\n            options: SceneOptions,\n            stepper: StepperService,\n        };\n\n        var objects = scene.objects;\n        var options = scene.options;\n        var stepper = scene.stepper;\n\n        stepper.init().then(function() {\n            $scope.scene = scene;\n            $scope.stepper = stepper;\n            var gui = new DatGui();\n        });\n\n    }]);\n\n    app.service('StepperService', ['$rootScope', '$q', '$http', 'SceneOptions', function($rootScope, $q, $http, SceneOptions) {\n\n        var stepper = this;\n        var options = SceneOptions;\n\n        var current = 0;\n        var duration = 2.500; // sec\n        var steps = [];\n        var tweens = [];\n\n        var values = {\n            pow: 0,\n            background: new THREE.Color(options.colors.background),\n            lines: new THREE.Color(options.colors.lines),\n            overLines: new THREE.Color(options.colors.overLines),\n        };\n\n        function getItems() {\n            var items = new Array(24).fill().map(function(v, i) {\n                return {\n                    id: i + 1,\n                    name: 'Step ' + (i + 1),\n                    colors: angular.copy(SceneOptions.colors),\n                    camera: {\n                        cameraHeight: 0,\n                        targetHeight: 0,\n                    },\n                    circle: {\n                        position: new THREE.Vector3(0, 0, 0),\n                        texture: 'img/rossini-01.png',\n                    }\n                };\n            });\n            return items;\n        }\n\n        function init() {\n            var deferred = $q.defer();\n            $http.get('json/rossini.js').then(function(response) {\n                var items = getItems(); // response.data\n                angular.forEach(items, function(item) {\n                    steps.push(item);\n                });\n                console.log('StepperService.load', steps);\n                deferred.resolve(steps);\n\n            }, function(error) {\n                deferred.reject(error);\n\n            });\n            return deferred.promise;\n        }\n\n        function clearTweens() {\n            while (tweens.length) {\n                var tween = tweens.pop();\n                tween.kill();\n            }\n        }\n\n        function tweenTo(pow, colors, duration, callback) {\n            clearTweens();\n            var background = new THREE.Color(colors.background);\n            var lines = new THREE.Color(colors.lines);\n            var overLines = new THREE.Color(colors.overLines);\n            tweens.push(TweenLite.to(stepper.values, duration, {\n                pow: pow,\n                delay: 0,\n                ease: Power2.easeInOut,\n                onComplete: function() {\n                    if (callback) {\n                        callback();\n                    }\n                },\n            }));\n            tweens.push(TweenLite.to(stepper.values.background, duration, {\n                r: background.r,\n                g: background.g,\n                b: background.b,\n                delay: 0,\n                ease: Power2.easeInOut,\n                onUpdate: function() {\n                    var color = stepper.values.background.getHexString();\n                    document.body.style.backgroundColor = '#' + color;\n                }\n            }));\n            tweens.push(TweenLite.to(stepper.values.lines, duration, {\n                r: lines.r,\n                g: lines.g,\n                b: lines.b,\n                delay: 0,\n                ease: Power2.easeInOut,\n            }));\n            tweens.push(TweenLite.to(stepper.values.overLines, duration, {\n                r: overLines.r,\n                g: overLines.g,\n                b: overLines.b,\n                delay: 0,\n                ease: Power2.easeInOut,\n            }));\n        }\n\n        function setTweens(duration) {\n            var index = stepper.current;\n            var step = steps[index];\n            tweenTo(index / steps.length, step.colors, duration, function() {\n                clearTweens();\n                console.log(step, stepper.values);\n            });\n        }\n\n        $rootScope.$on('onOptionsChanged', function() {\n            setTweens(0.250);\n        });\n\n        function setStep(index) {\n            var previous = stepper.current || 0;\n            stepper.current = index;\n            var step = steps[index];\n            options.colors.background = step.colors.background;\n            options.colors.lines = step.colors.lines;\n            options.colors.overLines = step.colors.overLines;\n            options.camera.cameraHeight = step.camera.cameraHeight;\n            options.camera.targetHeight = step.camera.targetHeight;\n            options.circle.position.copy(step.circle.position);\n            $rootScope.$broadcast('onStep', { current: index, previous: previous });\n            setTweens(stepper.duration);\n        }\n\n        function next() {\n            current++;\n            current = Math.min(steps.length - 1, current);\n            setStep(current);\n        }\n\n        function previous() {\n            current--;\n            current = Math.max(0, current);\n            setStep(current);\n        }\n\n        function getCurrentStep() {\n            return steps[current];\n        }\n\n        function getStepAtIndex(index) {\n            return steps[index];\n        }\n\n        this.init = init;\n        this.values = values;\n        this.duration = duration;\n        this.steps = steps;\n        this.current = current;\n        this.next = next;\n        this.previous = previous;\n        this.getCurrentStep = getCurrentStep;\n        this.getStepAtIndex = getStepAtIndex;\n\n    }]);\n\n    app.factory('DatGui', ['$rootScope', 'SceneOptions', 'StepperService', function($rootScope, SceneOptions, StepperService) {\n\n        var downloadFile = function downloadFile() {\n            var a = document.createElement(\"a\");\n            document.body.appendChild(a);\n            a.style = \"display: none\";\n            return function(data, fileName, json, pretty) {\n                if (json) {\n                    if (pretty) {\n                        data = JSON.stringify(data, null, 2); // spacing level = 2\n                    } else {\n                        data = JSON.stringify(data);\n                    }\n                }\n                var blob = new Blob([data], { type: \"octet/stream\" }),\n                    url = window.URL.createObjectURL(blob);\n                a.href = url;\n                a.download = fileName;\n                a.click();\n                window.URL.revokeObjectURL(url);\n            };\n        }();\n\n        function DatGui() {\n            var options = SceneOptions;\n            var stepper = StepperService;\n            var gui = new dat.GUI();\n\n            options.randomize = function() {\n                for (var i = 0; i < gui.__controllers.length; i++) {\n                    var c = gui.__controllers[i];\n                    if (c.__min) {\n                        var value = c.__min + (c.__max - c.__min) * Math.random();\n                        this[c.property] = value;\n                        c.updateDisplay();\n                    }\n                    if (c.__color) {\n                        c.__color.r = Math.floor(Math.random() * 255);\n                        c.__color.g = Math.floor(Math.random() * 255);\n                        c.__color.b = Math.floor(Math.random() * 255);\n                        c.updateDisplay();\n                        c.setValue(c.__color.hex);\n                    }\n                }\n            };\n\n            options.saveJson = function() {\n                console.log('saveJson');\n                downloadFile(stepper.steps, 'rossini.js', true, true);\n            };\n\n            function onOptionsChanged(params) {\n                var step = stepper.getCurrentStep();\n                step.colors.background = options.colors.background;\n                step.colors.lines = options.colors.lines;\n                step.colors.overLines = options.colors.overLines;\n                step.camera.cameraHeight = options.camera.cameraHeight;\n                step.camera.targetHeight = options.camera.targetHeight;\n                step.circle.position.copy(options.circle.position);\n                $rootScope.$broadcast('onOptionsChanged');\n            }\n\n            gui.closed = true;\n            gui.add(options.camera, 'cameraHeight', 20.0, 100.0).onChange(onOptionsChanged);\n            gui.add(options.camera, 'targetHeight', 20.0, 100.0).onChange(onOptionsChanged);\n            var circlePosition = gui.addFolder('circlePosition');\n            circlePosition.add(options.circle.position, 'x', -300, 300).onChange(onOptionsChanged);\n            circlePosition.add(options.circle.position, 'y', -300, 300).onChange(onOptionsChanged);\n            circlePosition.add(options.circle.position, 'z', -300, 300).onChange(onOptionsChanged);\n            var colors = gui.addFolder('colors');\n            colors.addColor(options.colors, 'background').onChange(onOptionsChanged);\n            colors.addColor(options.colors, 'lines').onChange(onOptionsChanged);\n            colors.addColor(options.colors, 'overLines').onChange(onOptionsChanged);\n            gui.add(options, 'audioVolume', 0.01, 1.0).onChange(onOptionsChanged);\n            gui.add(options, 'audioStrength', 10, 100).onChange(onOptionsChanged);\n            gui.add(options, 'noiseStrength', 10, 100).onChange(onOptionsChanged);\n            gui.add(options, 'circularStrength', 0.01, 0.90).onChange(onOptionsChanged);\n            gui.add(options, 'randomize');\n            gui.add(options, 'saveJson');\n\n            onOptionsChanged();\n\n            return gui;\n        }\n\n        return DatGui;\n\n    }]);\n\n}());"]}