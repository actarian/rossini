{"version":3,"sources":["docs/js/app.js"],"names":["angular","module","config","$httpProvider","$locationProvider","html5Mode","hashPrefix","run","$rootScope","getPerlinNoise","width","height","size","data","Uint8Array","perlin","ImprovedNoise","quality","z","Math","random","j","i","x","y","abs","noise","fade","t","lerp","a","b","grad","hash","h","u","v","p","floorX","floor","floorY","floorZ","X","Y","Z","xMinus1","yMinus1","zMinus1","w","A","AA","AB","B","BA","BB","getRandomRange","min","max","allowNegatives","n","app","Number","prototype","mod","this","directive","SceneOptions","StepperService","restrict","scope","link","element","attributes","getObjectRibbon","add","console","log","scene","object","remove","updateRibbon","c","stepper","steps","length","cpow","values","pow","tpow","step","getCurrentStep","position","cameraSpline","getPointAt","options","camera","cameraHeight","target","targetHeight","copy","lookAt","getMaterial","THREE","Vector2","window","innerWidth","innerHeight","MeshLineMaterial","color","lines","lineWidth","depthTest","updateRibbonMaterial","objects","ribbon","material","prev","Vector3","points","Array","fill","map","spline","CatmullRomCurve3","type","closed","geometry","Geometry","vertices","getPoints","line","MeshLine","setGeometry","Mesh","update","updateMaterial","getObjectCircles","index","state","adding","Date","now","removing","enabled","tween","kill","TweenLite","to","duration","delay","ease","Power2","easeInOut","onComplete","getLine1","addPoints","LineLoop","material1","points1","push","group1","getLine2","material2","points2","group2","l","g","pn","ratio","degrees","radians","PI","radius","increment","sincos","base","cos","sin","updateLine","audioStrength","noiseStrength","circularStrength","analyserData","forEach","aia","bands","aib","audioPow","nd","nia","iterator","nib","noisePow","noiseMap","linePow","ln","verticesNeedUpdate","updateCircle","lines1","lines2","rotation","getStepAtIndex","dummy","circle","scale","updateCircleMaterial","overLines","LineBasicMaterial","Object3D","texture","TextureLoader","load","wrapS","RepeatWrapping","wrapT","repeat","set","MeshBasicMaterial","transparent","PlaneGeometry","plane","updateAnalyser","analyser","getByteFrequencyData","circles","render","controls","renderer","loop","stats","begin","end","requestAnimationFrame","audio","w2","h2","$on","$scope","current","setTimeout","previous","volume","audioVolume","Scene","PerspectiveCamera","WebGLRenderer","alpha","antialias","logarithmicDepthBuffer","setClearColor","setSize","Stats","appendChild","domElement","dom","source","ctx","actx","AudioContext","webkitAudioContext","createAnalyser","Audio","src","audioUrl","addEventListener","bufferLength","createMediaElementSource","connect","destination","fftSize","frequencyBinCount","play","onWindowResize","aspect","updateProjectionMatrix","constant","colors","background","controller","DatGui","init","then","service","$q","$http","getItems","id","name","deferred","defer","get","response","items","item","resolve","error","reject","promise","clearTweens","tweens","pop","tweenTo","callback","Color","r","onUpdate","getHexString","document","body","style","backgroundColor","setTweens","setStep","$broadcast","next","factory","onOptionsChanged","params","gui","dat","GUI","randomize","__controllers","__min","value","__max","property","updateDisplay","__color","setValue","hex","saveJson","downloadFile","onChange","circlePosition","addFolder","addColor","createElement","fileName","json","pretty","JSON","stringify","blob","Blob","url","URL","createObjectURL","href","download","click","revokeObjectURL"],"mappings":"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","file":"app.min.js","sourcesContent":["/* global angular */\r\n\r\n(function() {\r\n    \"use strict\";\r\n\r\n    var app = angular.module('app', ['ngRoute', 'jsonFormatter']);\r\n\r\n}());\n/* global angular */\r\n\r\n(function() {\r\n    \"use strict\";\r\n\r\n    var app = angular.module('app');\r\n\r\n    app.config(['$httpProvider', function($httpProvider) {\r\n        // $httpProvider.defaults.withCredentials = true;\r\n    }]);\r\n\r\n}());\n/* global angular */\r\n\r\n(function() {\r\n    \"use strict\";\r\n\r\n    var app = angular.module('app');\r\n\r\n    app.config(['$locationProvider', function($locationProvider) {\r\n\r\n        // HTML5 MODE url writing method (false: #/anchor/use, true: /html5/url/use)\r\n        $locationProvider.html5Mode(true);\r\n        $locationProvider.hashPrefix('');\r\n\r\n    }]);\r\n\r\n}());\n/* global angular */\r\n\r\n(function() {\r\n    \"use strict\";\r\n\r\n    var app = angular.module('app');\r\n\r\n    app.run(['$rootScope', function($rootScope) {\r\n\r\n    }]);\r\n\r\n}());\n/* global angular */\n\n(function() {\n    \"use strict\";\n\n    var app = angular.module('app');\n\n    Number.prototype.mod = function(n) {\n        return ((this % n) + n) % n;\n    };\n\n    function getPerlinNoise(width, height) {\n        var size = width * height,\n            data = new Uint8Array(size),\n            perlin = new ImprovedNoise(),\n            quality = 1,\n            z = Math.random() * 100;\n        for (var j = 0; j < 4; j++) {\n            for (var i = 0; i < size; i++) {\n                var x = i % width,\n                    y = ~~(i / width);\n                data[i] += Math.abs(perlin.noise(x / quality, y / quality, z) * quality * 1.75);\n            }\n            quality *= 5;\n        }\n        return data;\n    }\n\n    function ImprovedNoise() {\n        var p = [151, 160, 137, 91, 90, 15, 131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10,\n            23, 190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33, 88, 237, 149, 56, 87,\n            174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166, 77, 146, 158, 231, 83, 111, 229, 122, 60, 211,\n            133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244, 102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208,\n            89, 18, 169, 200, 196, 135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123, 5,\n            202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42, 223, 183, 170, 213, 119,\n            248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9, 129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232,\n            178, 185, 112, 104, 218, 246, 97, 228, 251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249,\n            14, 239, 107, 49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254, 138, 236, 205,\n            93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180\n        ];\n        for (var i = 0; i < 256; i++) {\n            p[256 + i] = p[i];\n        }\n\n        function fade(t) {\n            return t * t * t * (t * (t * 6 - 15) + 10);\n        }\n\n        function lerp(t, a, b) {\n            return a + t * (b - a);\n        }\n\n        function grad(hash, x, y, z) {\n            var h = hash & 15;\n            var u = h < 8 ? x : y,\n                v = h < 4 ? y : h == 12 || h == 14 ? x : z;\n            return ((h & 1) === 0 ? u : -u) + ((h & 2) === 0 ? v : -v);\n        }\n\n        return {\n            noise: function(x, y, z) {\n                var floorX = Math.floor(x),\n                    floorY = Math.floor(y),\n                    floorZ = Math.floor(z);\n                var X = floorX & 255,\n                    Y = floorY & 255,\n                    Z = floorZ & 255;\n                x -= floorX;\n                y -= floorY;\n                z -= floorZ;\n                var xMinus1 = x - 1,\n                    yMinus1 = y - 1,\n                    zMinus1 = z - 1;\n                var u = fade(x),\n                    v = fade(y),\n                    w = fade(z);\n                var A = p[X] + Y,\n                    AA = p[A] + Z,\n                    AB = p[A + 1] + Z,\n                    B = p[X + 1] + Y,\n                    BA = p[B] + Z,\n                    BB = p[B + 1] + Z;\n                return lerp(w, lerp(v, lerp(u, grad(p[AA], x, y, z),\n                            grad(p[BA], xMinus1, y, z)),\n                        lerp(u, grad(p[AB], x, yMinus1, z),\n                            grad(p[BB], xMinus1, yMinus1, z))),\n                    lerp(v, lerp(u, grad(p[AA + 1], x, y, zMinus1),\n                            grad(p[BA + 1], xMinus1, y, z - 1)),\n                        lerp(u, grad(p[AB + 1], x, yMinus1, zMinus1),\n                            grad(p[BB + 1], xMinus1, yMinus1, zMinus1))));\n\n            }\n        };\n    }\n\n    function getRandomRange(min, max, allowNegatives) {\n        var n = -1 + Math.random() * 2;\n        var a = Math.abs(n);\n        var s = allowNegatives ? Math.floor(n / a) : 1;\n        return s * (min + (max - min) * a);\n    }\n\n    app.directive('scene', ['SceneOptions', 'StepperService', function(SceneOptions, StepperService) {\n        return {\n            restrict: 'A',\n            scope: {\n                data: '=scene',\n            },\n            link: function(scope, element, attributes) {\n                var data = scope.data;\n                if (!data) {\n                    return;\n                }\n\n                var objects = data.objects;\n\n                var options = SceneOptions;\n                var stepper = StepperService;\n\n                options.noiseMap = getPerlinNoise(options.points, options.lines);\n\n                var analyser, analyserData, audio;\n                var stats, scene, camera, shadow, back, light, renderer, width, height, w2, h2, mouse = { x: 0, y: 0 };\n                var controls = null;\n\n                scope.$on('onStep', function($scope, step) {\n                    console.log('onStep', step.current);\n                    var circle = objects.circles[step.current] || getObjectCircles(step.current);\n                    circle.add();\n                    objects.circles[step.current] = circle;\n                    setTimeout(function() {\n                        if (step.previous !== stepper.current) {\n                            var circle = objects.circles[step.previous];\n                            if (circle) {\n                                circle.remove();\n                            }\n                        }\n                    }, stepper.duration * 1000);\n                    console.log('objects', objects);\n                });\n\n                scope.$on('onOptionsChanged', function($scope) {\n                    // renderer.setClearColor(stepper.values.background, 1);\n                    if (audio) {\n                        audio.volume = options.audioVolume;\n                    }\n                    if (objects.ribbon) {\n                        objects.ribbon.updateMaterial();\n                    }\n                    angular.forEach(objects.circles, function(circle) {\n                        if (circle) {\n                            circle.updateMaterial();\n                        }\n                    });\n                    console.log('onOptionsChanged');\n                });\n\n                createScene();\n                // createLights();\n                createObjects();\n                createAnalyser();\n                addListeners();\n                loop();\n\n                function createScene() {\n                    width = window.innerWidth;\n                    height = window.innerHeight;\n                    w2 = width / 2;\n                    h2 = height / 2;\n\n                    var ratio = width / height;\n                    var fov = 30;\n                    var near = 0.001;\n                    var far = 20000;\n\n                    scene = new THREE.Scene();\n                    // scene.fog = new THREE.Fog(0x000000, 300, 1000);\n\n                    camera = new THREE.PerspectiveCamera(fov, ratio, near, far);\n                    /*\n                    camera.position.z = 100;\n                    camera.position.y = -500;\n                    camera.lookAt(new THREE.Vector3(0, 0, 0));\n                    */\n\n                    renderer = new THREE.WebGLRenderer({\n                        alpha: true,\n                        antialias: true,\n                        logarithmicDepthBuffer: true\n                    });\n\n                    renderer.setClearColor(0x000000, 0); // the default\n                    // renderer.setClearColor(stepper.values.background, 1);\n                    renderer.setSize(width, height);\n                    // renderer.shadowMap.enabled = true;\n\n                    stats = new Stats();\n                    element[0].appendChild(renderer.domElement);\n                    element[0].appendChild(stats.dom);\n                }\n\n                function createLights() {\n                    light = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.5);\n                    shadow = new THREE.DirectionalLight(0xffffff, 0.8);\n                    shadow.position.set(200, 200, 200);\n                    shadow.castShadow = true;\n                    // shadow.shadowDarkness = .2;\n                    back = new THREE.DirectionalLight(0xffffff, 0.4);\n                    back.position.set(-100, 200, 50);\n                    // back.shadowDarkness = .2;\n                    back.castShadow = true;\n                    scene.add(light);\n                    scene.add(shadow);\n                    scene.add(back);\n                }\n\n                function createObjects() {\n                    objects.ribbon = getObjectRibbon();\n                    objects.circles = new Array(stepper.steps).fill(null);\n                }\n\n                function getObjectRibbon() {\n                    var material = getMaterial();\n\n                    var prev = new THREE.Vector3();\n                    var points = new Array(options.ribbon.points).fill(null).map(function() {\n                        var p = new THREE.Vector3().copy(prev);\n                        prev.x += getRandomRange(500, 1000, true);\n                        prev.y += getRandomRange(20, 60, true);\n                        prev.z += getRandomRange(1000, 2000, false);\n                        return p;\n                    });\n\n                    var spline = new THREE.CatmullRomCurve3(points);\n                    spline.type = 'catmullrom';\n                    spline.closed = false;\n\n                    var cameraSpline = new THREE.CatmullRomCurve3(spline.points.map(function(p) {\n                        return new THREE.Vector3(p.x, p.y + 30, p.z);\n                    }));\n                    cameraSpline.type = 'catmullrom';\n                    cameraSpline.closed = false;\n\n                    var geometry = new THREE.Geometry();\n                    geometry.vertices = spline.getPoints(options.ribbon.vertices);\n\n                    var line = new MeshLine();\n                    line.setGeometry(geometry);\n                    // line.setGeometry( geometry, function( p ) { return 2; } ); // makes width 2 * lineWidth\n                    // line.setGeometry( geometry, function( p ) { return 1 - p; } ); // makes width taper\n                    // line.setGeometry( geometry, function( p ) { return 2 + Math.sin( 50 * p ); } ); // makes width sinusoidal\n\n                    var object = new THREE.Mesh(line.geometry, material);\n                    add();\n\n                    function add() {\n                        console.log('objects.ribbon.add');\n                        scene.add(object);\n                    }\n\n                    function remove() {\n                        console.log('objects.ribbon.remove');\n                        scene.remove(object);\n                    }\n\n                    camera.target = camera.target || new THREE.Vector3(0, 0, 0);\n\n                    function updateRibbon() {\n                        var c = (1 / stepper.steps.length) * 0.1;\n                        var cpow = stepper.values.pow;\n                        var tpow = (cpow + c).mod(1);\n                        var step = stepper.getCurrentStep();\n                        var position = cameraSpline.getPointAt(cpow);\n                        position.y += options.camera.cameraHeight;\n                        position.y += step.camera.cameraHeight;\n                        var target = cameraSpline.getPointAt(tpow);\n                        // var tangent = cameraSpline.getTangent(tpow).normalize().multiplyScalar(100);\n                        // target.add(tangent);\n                        target.y += options.camera.targetHeight;\n                        target.y += step.camera.targetHeight;\n                        camera.position.copy(position);\n                        camera.target.copy(target);\n                        camera.lookAt(camera.target);\n                    }\n\n                    function getMaterial() {\n                        var resolution = new THREE.Vector2(window.innerWidth, window.innerHeight);\n                        return new MeshLineMaterial({\n                            color: stepper.values.lines,\n                            lineWidth: 5,\n                            depthTest: true,\n                            /*\n                            opacity: 1,\n                            resolution: resolution,\n                            sizeAttenuation: 1,\n                            near: 1,\n                            far: 1000,\n                            blending: THREE.AdditiveBlending,\n                            transparent: false,\n                            side: THREE.DoubleSide,\n                            */\n                        });\n                    }\n\n                    function updateRibbonMaterial() {\n                        // !!! non va bene\n                        objects.ribbon.material = getMaterial();\n                        objects.ribbon.object.material = objects.ribbon.material;\n                    }\n\n                    return {\n                        object: object,\n                        spline: spline,\n                        cameraSpline: cameraSpline,\n                        geometry: geometry,\n                        material: material,\n                        add: add,\n                        remove: remove,\n                        update: updateRibbon,\n                        updateMaterial: updateRibbonMaterial,\n                    };\n                }\n\n                function getObjectCircles(index) {\n                    var geometry, object, circles = [];\n\n                    // materials\n                    var material1 = new THREE.LineBasicMaterial({\n                        color: stepper.values.lines,\n                    });\n\n                    var material2 = new THREE.LineBasicMaterial({\n                        color: stepper.values.overLines,\n                    });\n\n                    var resolution = new THREE.Vector2(window.innerWidth, window.innerHeight);\n\n                    object = new THREE.Object3D();\n\n                    var points1 = [],\n                        points2 = [],\n                        meshLines1 = [],\n                        meshLines2 = [],\n                        meshLineGeometries1 = [],\n                        meshLineGeometries2 = [],\n                        useMeshLines = false;\n\n                    var pn = options.points,\n                        ln = options.lines;\n\n                    var dummy = new THREE.Object3D();\n                    object.add(dummy);\n\n                    // circle\n                    var step = stepper.steps[index];\n                    var texture = new THREE.TextureLoader().load(step.circle.texture);\n                    texture.wrapS = THREE.RepeatWrapping;\n                    texture.wrapT = THREE.RepeatWrapping;\n                    texture.repeat.set(1, 1);\n                    var material = new THREE.MeshBasicMaterial({\n                        color: 0xffffff,\n                        map: texture,\n                        transparent: true,\n                    });\n                    geometry = new THREE.PlaneGeometry(options.radius * 2 - 20, options.radius * 2 - 20, 8, 8);\n                    var plane = new THREE.Mesh(geometry, material);\n                    dummy.add(plane);\n                    // circle\n\n                    var group1 = new THREE.Object3D();\n                    dummy.add(group1);\n\n                    var group2 = new THREE.Object3D();\n                    dummy.add(group2);\n\n                    var lines1 = new Array(ln).fill(null).map(getLine1);\n                    var lines2 = new Array(ln).fill(null).map(getLine2);\n\n                    var state = {\n                        pow: 0,\n                        duration: 0.350,\n                        enabled: false,\n                        adding: false,\n                        removing: false,\n                    };\n\n                    var to = null;\n\n                    function add() {\n                        console.log('objects.circles.add');\n                        scene.add(object);\n                        state.adding = Date.now();\n                        state.removing = false;\n                        state.enabled = true;\n                        if (state.tween) {\n                            state.tween.kill();\n                        }\n                        state.tween = TweenLite.to(state, state.duration, {\n                            pow: 1,\n                            delay: 0,\n                            ease: Power2.easeInOut,\n                            onComplete: function() {\n                                state.adding = false;\n                            },\n                        });\n                    }\n\n                    function remove() {\n                        console.log('objects.circles.remove');\n                        state.adding = false;\n                        state.removing = Date.now();\n                        if (state.tween) {\n                            state.tween.kill();\n                        }\n                        state.tween = TweenLite.to(state, state.duration, {\n                            pow: 0,\n                            delay: 0,\n                            ease: Power2.easeInOut,\n                            onComplete: function() {\n                                state.removing = false;\n                                state.enabled = false;\n                                scene.remove(object);\n                            },\n                        });\n                    }\n\n                    var iterator = 0;\n\n                    function getLine1(v, i) {\n                        var geometry = new THREE.Geometry();\n                        var points = addPoints(geometry, i, 1);\n                        var line = null;\n                        line = new THREE.LineLoop(geometry, material1);\n                        points1.push(points);\n                        // var spline = new THREE.CatmullRomCurve3(points);\n                        // circle.spline = spline;\n                        group1.add(line);\n                        return line;\n                    }\n\n                    function getLine2(v, i) {\n                        var geometry = new THREE.Geometry();\n                        var points = addPoints(geometry, i, 2);\n                        var line = null;\n                        line = new THREE.LineLoop(geometry, material2);\n                        points2.push(points);\n                        // var spline = new THREE.CatmullRomCurve3(points);\n                        // circle.spline = spline;\n                        group2.add(line);\n                        return line;\n                    }\n\n                    function addPoints(geometry, l, g) {\n                        var points = new Array(pn).fill(null).map(function(v, i) {\n                            var ratio = i / pn;\n                            var degrees = 360 * ratio; // point degrees;\n                            degrees += 60 * index; // circle offset;\n                            degrees += 30 * g; // group offset;\n                            degrees += (360 / pn * 0.1) * l; // line offset;\n                            var radians = degrees * Math.PI / 180;\n                            var radius = options.radius;\n                            var increment = 0;\n                            if (g === 1) {\n                                increment += (l * l * l * 0.005);\n                            } else {\n                                increment += (l * l * l * 0.005);\n                            }\n                            v = new THREE.Vector3();\n                            v.sincos = {\n                                base: radius,\n                                increment: increment,\n                                radius: radius,\n                                x: Math.cos(radians),\n                                y: Math.sin(radians),\n                            };\n                            geometry.vertices.push(v);\n                            return v;\n                        });\n                        return points;\n                    }\n\n                    function updateLine(geometry, vertices, l, g) {\n                        var audioStrength = options.audioStrength,\n                            noiseStrength = options.noiseStrength,\n                            circularStrength = options.circularStrength,\n                            data = analyserData;\n\n                        angular.forEach(vertices, function(v, i) {\n                            var aia = i % options.bands;\n                            var aib = (pn - 1 - i) % options.bands;\n                            var audioPow = ((data[aia] + data[aib]) / 2) / options.bands;\n                            // var audioPow = data[aia] / options.bands;\n\n                            var nd = g === 1 ? 0 : 64;\n                            var nia = l * pn + ((i + nd + iterator) % pn);\n                            var nib = l * pn + (((pn - 1 - i - nd) + iterator) % pn);\n                            var noisePow = (options.noiseMap[nia] + options.noiseMap[nib]) / 2 / 64;\n\n                            var linePow = 1 - ((ln - l) / ln * circularStrength);\n\n                            var radius = v.sincos.base +\n                                (v.sincos.increment * noisePow) +\n                                (v.sincos.increment * audioPow) +\n                                (noiseStrength * noisePow) * linePow +\n                                (audioStrength * audioPow) * linePow +\n                                // (audioStrength * (3 - g) * audioPow * (l * 0.1)) * linePow +\n                                0;\n\n                            v.sincos.radius = radius;\n                            // v.sincos.radius += (radius - v.sincos.radius) / 2;\n\n                            v.x = v.sincos.x * v.sincos.radius;\n                            v.y = v.sincos.y * v.sincos.radius;\n                            v.z = 0; // -l;\n                            // console.log(v.sincos.radius);\n                        });\n\n                        /*\n                        var f = 0;\n                        var l = pn - 1;\n                        var first = new THREE.Vector3().copy(vertices[f]);\n                        var last = new THREE.Vector3().copy(vertices[l]);\n                        vertices[f].add(new THREE.Vector3().subVectors(first, last).multiplyScalar(0.5));\n                        vertices[l].add(new THREE.Vector3().subVectors(first, last).multiplyScalar(-0.5));\n                        */\n\n                        geometry.verticesNeedUpdate = true;\n\n                        /*\n                                    lines.forEach( function( l, i ) {\n                        if( params.animateWidth ) l.material.uniforms.lineWidth.value = params.lineWidth * ( 1 + .5 * Math.sin( 5 * t + i ) );\n                        if( params.autoRotate ) l.rotation.y += .125 * delta;\n                      l.material.uniforms.visibility.value= params.animateVisibility ? (time/3000) % 1.0 : 1.0;\n                                */\n                        /*\n                        if (iterator === 60 && g === 2 && l === 0) {\n                            console.log('vertices', geometry.vertices.map(function(v) { return v.x + ',' + v.y; }));\n                        }\n                        */\n                    }\n\n                    function updateCircle() {\n                        angular.forEach(lines1, function(line, l) {\n                            updateLine(line.geometry, points1[l], l, 1);\n                        });\n\n                        angular.forEach(lines2, function(line, l) {\n                            updateLine(line.geometry, points2[l], l, 2);\n                        });\n\n                        group1.rotation.z += 0.001;\n                        group2.rotation.z -= 0.001;\n\n                        var step = stepper.getStepAtIndex(index);\n                        dummy.position.copy(step.circle.position);\n\n                        var position = objects.ribbon.cameraSpline.getPointAt((index + 0.1) / stepper.steps.length);\n                        // var tangent = objects.ribbon.cameraSpline.getTangent(index + 0.1 / stepper.steps.length).normalize().multiplyScalar(300);\n                        // position.add(tangent);\n\n                        position.y += options.camera.targetHeight;\n                        object.position.copy(position);\n\n                        /*\n                        object.position.x += (position.x + Math.random() * 20 - object.position.x) / 20;\n                        object.position.y += (position.y + Math.random() * 20 - object.position.y) / 20;\n                        object.position.z += (position.z + Math.random() * 20 - object.position.z) / 20;\n                        */\n\n                        object.scale.x = object.scale.y = object.scale.z = 0.001 + 0.1 * state.pow;\n                        object.lookAt(camera.position);\n\n                        updateCircleMaterial();\n\n                        // iterator++;\n                    }\n\n                    function updateCircleMaterial() {\n                        material1.color = stepper.values.lines;\n                        material2.color = stepper.values.overLines;\n                    }\n\n                    return {\n                        add: add,\n                        remove: remove,\n                        object: object,\n                        state: state,\n                        update: updateCircle,\n                        updateMaterial: updateCircleMaterial,\n                    };\n                }\n\n                function createAnalyser() {\n                    var source, ctx, actx = (window.AudioContext || window.webkitAudioContext);\n                    source = null;\n                    ctx = new actx();\n                    analyser = ctx.createAnalyser();\n                    audio = new Audio();\n                    audio.src = options.audioUrl;\n                    audio.controls = true;\n                    audio.addEventListener('canplay', function() {\n                        var bufferLength;\n                        console.log('audio canplay');\n                        source = ctx.createMediaElementSource(audio);\n                        source.connect(analyser);\n                        source.connect(ctx.destination);\n                        analyser.fftSize = options.bands * 2;\n                        bufferLength = analyser.frequencyBinCount;\n                        console.log('bufferLength', bufferLength);\n                        analyserData = new Uint8Array(bufferLength);\n                        return analyserData;\n                    });\n                    audio.volume = options.audioVolume;\n                    return audio.play();\n                }\n\n                function updateAnalyser() {\n                    if (analyserData) {\n                        analyser.getByteFrequencyData(analyserData);\n                        angular.forEach(objects.circles, function(circle) {\n                            if (circle && circle.state.enabled) {\n                                circle.update();\n                            }\n                        });\n                    }\n                }\n\n                function render() {\n                    if (controls) {\n                        controls.update();\n                    }\n                    if (objects.ribbon) {\n                        objects.ribbon.update();\n                    }\n                    updateAnalyser();\n                    renderer.render(scene, camera);\n                }\n\n                function loop() {\n                    stats.begin();\n                    render();\n                    stats.end();\n                    requestAnimationFrame(loop);\n                }\n\n                function addListeners() {\n                    function handleMouseMove(event) {\n                        mouse = { x: event.clientX, y: event.clientY };\n                    }\n\n                    function handleMouseDown(event) {\n                        //\n                    }\n\n                    function handleMouseUp(event) {\n                        //\n                    }\n\n                    function handleTouchStart(event) {\n                        if (event.touches.length > 1) {\n                            event.preventDefault();\n                            mousePos = { x: event.touches[0].pageX, y: event.touches[0].pageY };\n                        }\n                    }\n\n                    function handleTouchEnd(event) {\n                        mousePos = { x: windowHalfX, y: windowHalfY };\n                    }\n\n                    function handleTouchMove(event) {\n                        if (event.touches.length == 1) {\n                            event.preventDefault();\n                            mousePos = { x: event.touches[0].pageX, y: event.touches[0].pageY };\n                        }\n                    }\n\n                    function onWindowResize() {\n                        width = window.innerWidth;\n                        height = window.innerHeight;\n                        w2 = width / 2;\n                        h2 = height / 2;\n                        renderer.setSize(width, height);\n                        camera.aspect = width / height;\n                        camera.updateProjectionMatrix();\n                    }\n                    window.addEventListener('resize', onWindowResize, false);\n                    /*\n                    document.addEventListener('mousemove', handleMouseMove, false);\n                    document.addEventListener('mousedown', handleMouseDown, false);\n                    document.addEventListener('mouseup', handleMouseUp, false);\n                    document.addEventListener('touchstart', handleTouchStart, false);\n                    document.addEventListener('touchend', handleTouchEnd, false);\n                    document.addEventListener('touchmove', handleTouchMove, false);\n                    */\n                }\n\n            }\n        };\n    }]);\n\n}());\n/* global angular */\n\n(function() {\n    \"use strict\";\n\n    var app = angular.module('app');\n\n    app.constant('SceneOptions', {\n        colors: {\n            background: 0xeae8e8,\n            lines: 0x3353a4,\n            overLines: 0xb4bfdd,\n        },\n        camera: {\n            cameraHeight: 33,\n            targetHeight: 39,\n        },\n        circle: {\n            position: new THREE.Vector3(),\n        },\n        ribbon: {\n            points: 40, // 12\n            vertices: 3600, // 1200\n        },\n        audioUrl: \"audio/rossini-192.mp3\",\n        audioVolume: 0.000009,\n        bands: 128,\n        points: 128,\n        lines: 32,\n        radius: 200,\n        audioStrength: 100,\n        noiseStrength: 25,\n        circularStrength: 0.90,\n    });\n\n    app.controller('RootCtrl', ['$scope', 'SceneOptions', 'StepperService', 'DatGui', function($scope, SceneOptions, StepperService, DatGui) {\n\n        var scene = {\n            objects: {},\n            options: SceneOptions,\n            stepper: StepperService,\n        };\n\n        var objects = scene.objects;\n        var options = scene.options;\n        var stepper = scene.stepper;\n\n        stepper.init().then(function() {\n            $scope.scene = scene;\n            $scope.stepper = stepper;\n            var gui = new DatGui();\n        });\n\n    }]);\n\n    app.service('StepperService', ['$rootScope', '$q', '$http', 'SceneOptions', function($rootScope, $q, $http, SceneOptions) {\n\n        var stepper = this;\n        var options = SceneOptions;\n\n        var current = 0;\n        var duration = 2.500; // sec\n        var steps = [];\n        var tweens = [];\n\n        var values = {\n            pow: 0,\n            background: new THREE.Color(options.colors.background),\n            lines: new THREE.Color(options.colors.lines),\n            overLines: new THREE.Color(options.colors.overLines),\n        };\n\n        function getItems() {\n            var items = new Array(24).fill().map(function(v, i) {\n                return {\n                    id: i + 1,\n                    name: 'Step ' + (i + 1),\n                    colors: angular.copy(SceneOptions.colors),\n                    camera: {\n                        cameraHeight: 0,\n                        targetHeight: 0,\n                    },\n                    circle: {\n                        position: new THREE.Vector3(0, 0, 0),\n                        texture: 'img/rossini-01.png',\n                    }\n                };\n            });\n            return items;\n        }\n\n        function init() {\n            var deferred = $q.defer();\n            $http.get('json/rossini.js').then(function(response) {\n                var items = getItems(); // response.data\n                angular.forEach(items, function(item) {\n                    steps.push(item);\n                });\n                console.log('StepperService.load', steps);\n                deferred.resolve(steps);\n\n            }, function(error) {\n                deferred.reject(error);\n\n            });\n            return deferred.promise;\n        }\n\n        function clearTweens() {\n            while (tweens.length) {\n                var tween = tweens.pop();\n                tween.kill();\n            }\n        }\n\n        function tweenTo(pow, colors, duration, callback) {\n            clearTweens();\n            var background = new THREE.Color(colors.background);\n            var lines = new THREE.Color(colors.lines);\n            var overLines = new THREE.Color(colors.overLines);\n            tweens.push(TweenLite.to(stepper.values, duration, {\n                pow: pow,\n                delay: 0,\n                ease: Power2.easeInOut,\n                onComplete: function() {\n                    if (callback) {\n                        callback();\n                    }\n                },\n            }));\n            tweens.push(TweenLite.to(stepper.values.background, duration, {\n                r: background.r,\n                g: background.g,\n                b: background.b,\n                delay: 0,\n                ease: Power2.easeInOut,\n                onUpdate: function() {\n                    var color = stepper.values.background.getHexString();\n                    document.body.style.backgroundColor = '#' + color;\n                }\n            }));\n            tweens.push(TweenLite.to(stepper.values.lines, duration, {\n                r: lines.r,\n                g: lines.g,\n                b: lines.b,\n                delay: 0,\n                ease: Power2.easeInOut,\n            }));\n            tweens.push(TweenLite.to(stepper.values.overLines, duration, {\n                r: overLines.r,\n                g: overLines.g,\n                b: overLines.b,\n                delay: 0,\n                ease: Power2.easeInOut,\n            }));\n        }\n\n        function setTweens(duration) {\n            var index = stepper.current;\n            var step = steps[index];\n            tweenTo(index / steps.length, step.colors, duration, function() {\n                clearTweens();\n            });\n        }\n\n        $rootScope.$on('onOptionsChanged', function() {\n            setTweens(0.250);\n        });\n\n        function setStep(index) {\n            var previous = stepper.current || 0;\n            stepper.current = index;\n            var step = steps[index];\n            options.colors.background = step.colors.background;\n            options.colors.lines = step.colors.lines;\n            options.colors.overLines = step.colors.overLines;\n            options.camera.cameraHeight = step.camera.cameraHeight;\n            options.camera.targetHeight = step.camera.targetHeight;\n            options.circle.position.copy(step.circle.position);\n            $rootScope.$broadcast('onStep', { current: index, previous: previous });\n            setTweens(stepper.duration);\n        }\n\n        function next() {\n            current++;\n            current = Math.min(steps.length - 1, current);\n            setStep(current);\n        }\n\n        function previous() {\n            current--;\n            current = Math.max(0, current);\n            setStep(current);\n        }\n\n        function getCurrentStep() {\n            return steps[current];\n        }\n\n        function getStepAtIndex(index) {\n            return steps[index];\n        }\n\n        this.init = init;\n        this.values = values;\n        this.duration = duration;\n        this.steps = steps;\n        this.current = current;\n        this.next = next;\n        this.previous = previous;\n        this.getCurrentStep = getCurrentStep;\n        this.getStepAtIndex = getStepAtIndex;\n\n    }]);\n\n    app.factory('DatGui', ['$rootScope', 'SceneOptions', 'StepperService', function($rootScope, SceneOptions, StepperService) {\n\n        var downloadFile = function downloadFile() {\n            var a = document.createElement(\"a\");\n            document.body.appendChild(a);\n            a.style = \"display: none\";\n            return function(data, fileName, json, pretty) {\n                if (json) {\n                    if (pretty) {\n                        data = JSON.stringify(data, null, 2); // spacing level = 2\n                    } else {\n                        data = JSON.stringify(data);\n                    }\n                }\n                var blob = new Blob([data], { type: \"octet/stream\" }),\n                    url = window.URL.createObjectURL(blob);\n                a.href = url;\n                a.download = fileName;\n                a.click();\n                window.URL.revokeObjectURL(url);\n            };\n        }();\n\n        function DatGui() {\n            var options = SceneOptions;\n            var stepper = StepperService;\n            var gui = new dat.GUI();\n\n            options.randomize = function() {\n                for (var i = 0; i < gui.__controllers.length; i++) {\n                    var c = gui.__controllers[i];\n                    if (c.__min) {\n                        var value = c.__min + (c.__max - c.__min) * Math.random();\n                        this[c.property] = value;\n                        c.updateDisplay();\n                    }\n                    if (c.__color) {\n                        c.__color.r = Math.floor(Math.random() * 255);\n                        c.__color.g = Math.floor(Math.random() * 255);\n                        c.__color.b = Math.floor(Math.random() * 255);\n                        c.updateDisplay();\n                        c.setValue(c.__color.hex);\n                    }\n                }\n            };\n\n            options.saveJson = function() {\n                console.log('saveJson');\n                downloadFile(stepper.steps, 'rossini.js', true, true);\n            };\n\n            function onOptionsChanged(params) {\n                var step = stepper.getCurrentStep();\n                step.colors.background = options.colors.background;\n                step.colors.lines = options.colors.lines;\n                step.colors.overLines = options.colors.overLines;\n                step.camera.cameraHeight = options.camera.cameraHeight;\n                step.camera.targetHeight = options.camera.targetHeight;\n                step.circle.position.copy(options.circle.position);\n                $rootScope.$broadcast('onOptionsChanged');\n            }\n\n            gui.closed = true;\n            gui.add(options.camera, 'cameraHeight', 20.0, 100.0).onChange(onOptionsChanged);\n            gui.add(options.camera, 'targetHeight', 20.0, 100.0).onChange(onOptionsChanged);\n            var circlePosition = gui.addFolder('circlePosition');\n            circlePosition.add(options.circle.position, 'x', -300, 300).onChange(onOptionsChanged);\n            circlePosition.add(options.circle.position, 'y', -300, 300).onChange(onOptionsChanged);\n            circlePosition.add(options.circle.position, 'z', -300, 300).onChange(onOptionsChanged);\n            var colors = gui.addFolder('colors');\n            colors.addColor(options.colors, 'background').onChange(onOptionsChanged);\n            colors.addColor(options.colors, 'lines').onChange(onOptionsChanged);\n            colors.addColor(options.colors, 'overLines').onChange(onOptionsChanged);\n            gui.add(options, 'audioVolume', 0.01, 1.0).onChange(onOptionsChanged);\n            gui.add(options, 'audioStrength', 10, 100).onChange(onOptionsChanged);\n            gui.add(options, 'noiseStrength', 10, 100).onChange(onOptionsChanged);\n            gui.add(options, 'circularStrength', 0.01, 0.90).onChange(onOptionsChanged);\n            gui.add(options, 'randomize');\n            gui.add(options, 'saveJson');\n\n            onOptionsChanged();\n\n            return gui;\n        }\n\n        return DatGui;\n\n    }]);\n\n}());"]}